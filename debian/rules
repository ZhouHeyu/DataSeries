#!/usr/bin/make -f
# -*- makefile -*-

# TODO: once we stop supporting lenny, upgrade to using the dh command.

#export DH_VERBOSE=1

LINTEL_VERSION := $(shell perl -ne '/\w+\s+\(([0-9\.]+)\) /o || die "bad $$_"; print "$$1"; exit(0);' <../Lintel/debian/changelog)

VERSION := $(shell perl -ne '/\w+\s+\(([0-9\.]+)\) /o || die "bad $$_"; print "$$1"; exit(0);' <debian/changelog)

help:
	echo "fakeroot ./debian/rules binary"
	echo "fakeroot ./debian/rules debian/stamp/pbuilder/debian-lenny-amd64"
	echo "sudo ./debian/rules tars | pbuilder"
	echo "Lintel version $(LINTEL_VERSION) // DataSeries version $(VERSION)"

/var/www/localpkgs/%/re-archive.dep: /var/www/localpkgs/%/lintel_$(LINTEL_VERSION).dsc /var/www/localpkgs/force-rebuild
	touch $@

/var/www/localpkgs/force-rebuild: 
	touch $@

-include ../Lintel/debian/pkg-targets.mk

PARALLELISM=6

debian/stamp/pbuilder/%: /var/cache/pbuilder/%.tgz
	[ -f ../dataseries_$(VERSION).dsc ]
	for i in /var/www/localpkgs/$*/*; do curl http://localhost/localpkgs/$*/./`basename $$i` >/dev/null 2>&1; done
	touch /var/cache/pbuilder
	perl debian/fixup-dsc.pl $* < ../dataseries_$(VERSION).dsc >../dataseries_$(VERSION)-$*.dsc
	pbuilder --build --basetgz /var/cache/pbuilder/$*.tgz --debbuildopts "-j$(PARALLELISM)" \
	    --buildresult /var/cache/pbuilder/result/$* ../dataseries_$(VERSION)-$*.dsc
	rm ../dataseries_$(VERSION)-$*.dsc
	mkdir -p debian/stamp/pbuilder
	touch $@

debian/build/config-stamp: 
	dh_testdir
	mkdir -p debian/build
	(cd debian/build; cmake -DCMAKE_INSTALL_PREFIX=/usr ../..)
	touch $@

build: build-stamp
build-stamp:  debian/build/config-stamp
	dh_testdir

	(cd debian/build && $(MAKE))
#	-(cd debian/build && ctest -V -R lsfdsplots)
#	-(cd debian/build && ctest -V -R nfsdsanalysis)
#	-sleep 3600
	(cd debian/build && ctest)

	touch $@

clean: 
	dh_testdir
	dh_testroot
	rm -f build-stamp 

	[ ! -d debian/build ] || rm -rf debian/build
	[ ! -e debian/stamp ] || rm -rf debian/stamp

	dh_clean

TMP_USR=$(CURDIR)/debian/tmp/usr
install: build
	dh_testdir
	dh_testroot
	dh_prep || dh_clean -k
	dh_installdirs

	(cd debian/build && $(MAKE) DESTDIR=$(CURDIR)/debian/tmp install)
	./debian/fix-install.sh $(CURDIR)/debian/tmp

# Build architecture-independent files here.
binary-indep: build install
	dh_testdir -i
	dh_testroot -i
	dh_installchangelogs -i
	dh_installdocs -i
	dh_installexamples -i
#	dh_installmenu
#	dh_installdebconf
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installcatalogs
#	dh_installpam
#	dh_installmime
#	dh_installinit
#	dh_installcron
#	dh_installinfo
#	dh_installwm
#	dh_installudev
#	dh_lintian
#	dh_bugfiles
#	dh_undocumented
	dh_installman -i
	dh_link -i
	dh_compress -i
	dh_fixperms -i
	dh_perl -i
	dh_installdeb -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir -a
	dh_testroot -a
	# TODO: auto-make changelog from version control if needed
	dh_installchangelogs -a
	dh_installdocs -a
	dh_installexamples -a
	dh_install -a --sourcedir=debian/tmp
#	dh_installmenu
#	dh_installdebconf	
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_installinit
#	dh_installcron
#	dh_installinfo
	dh_installman -a
	dh_link -a
	dh_strip -a
	dh_compress -a
	dh_fixperms -a
	dh_perl -a
#	dh_python
	dh_makeshlibs -a -v
	dh_installdeb -a
	dh_shlibdeps -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install 
