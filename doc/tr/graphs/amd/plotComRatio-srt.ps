%!PS-Adobe-2.0
%%Title: plotComRatio-srt.ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Wed Mar 21 11:37:17 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -80 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1080 720 M
63 0 V
5649 0 R
-63 0 V
stroke
936 720 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 2)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1080 1123 M
63 0 V
5649 0 R
-63 0 V
stroke
936 1123 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 3)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1080 1526 M
63 0 V
5649 0 R
-63 0 V
stroke
936 1526 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 4)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1080 1930 M
63 0 V
5649 0 R
-63 0 V
stroke
936 1930 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 5)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1080 2333 M
63 0 V
5649 0 R
-63 0 V
stroke
936 2333 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 6)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1080 2736 M
63 0 V
5649 0 R
-63 0 V
stroke
936 2736 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 7)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1080 3139 M
63 0 V
5649 0 R
-63 0 V
stroke
936 3139 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 8)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1080 3542 M
63 0 V
5649 0 R
-63 0 V
stroke
936 3542 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 9)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1080 3946 M
63 0 V
5649 0 R
-63 0 V
stroke
936 3946 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 10)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1080 4349 M
63 0 V
5649 0 R
-63 0 V
stroke
936 4349 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 11)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1080 4752 M
63 0 V
5649 0 R
-63 0 V
stroke
936 4752 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 12)]
] -80.0 MRshow
grestore
1.000 UL
LTb
6456 720 M
0 63 V
stroke
6456 480 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 (64M)]
] -80.0 MCshow
grestore
1.000 UL
LTb
5448 720 M
0 63 V
stroke
5448 480 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 (8M)]
] -80.0 MCshow
grestore
1.000 UL
LTb
4440 720 M
0 63 V
stroke
4440 480 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 (1M)]
] -80.0 MCshow
grestore
1.000 UL
LTb
3432 720 M
0 63 V
stroke
3432 480 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 (128K)]
] -80.0 MCshow
grestore
1.000 UL
LTb
2424 720 M
0 63 V
stroke
2424 480 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 (16K)]
] -80.0 MCshow
grestore
1.000 UL
LTb
1080 720 M
0 63 V
stroke
1080 480 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 (1024)]
] -80.0 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1080 720 M
5712 0 V
0 4032 V
-5712 0 V
0 -4032 V
LTb
240 2736 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 240.0 0.0 true true 0 (Average Compression Ratio)]
] -80.0 MCshow
grestore
grestore
LTb
3936 120 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 (Extent Size \(Bytes\) - \(Logarithmic Scale\))]
] -80.0 MCshow
grestore
1.000 UP
2.000 UP
2.000 UL
LT0
LTb
1656 4569 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 (lzf)]
] -80.0 MRshow
grestore
LT0
1800 4569 M
639 0 V
-639 31 R
0 -62 V
639 62 R
0 -62 V
1080 844 M
672 276 V
336 93 V
197 39 V
139 20 V
336 32 V
336 16 V
197 6 V
139 3 V
200 3 V
136 1 V
336 2 V
140 1 V
117 0 V
79 0 V
1008 1 V
1008 0 V
336 0 V
1080 828 M
0 32 V
-31 -32 R
62 0 V
-62 32 R
62 0 V
641 233 R
0 53 V
-31 -53 R
62 0 V
-62 53 R
62 0 V
305 38 R
0 58 V
-31 -58 R
62 0 V
-62 58 R
62 0 V
166 -21 R
0 62 V
-31 -62 R
62 0 V
-62 62 R
62 0 V
108 -42 R
0 62 V
-31 -62 R
62 0 V
-62 62 R
62 0 V
305 -31 R
0 64 V
-31 -64 R
62 0 V
-62 64 R
62 0 V
305 -48 R
0 65 V
-31 -65 R
62 0 V
-62 65 R
62 0 V
166 -60 R
0 66 V
-31 -66 R
62 0 V
-62 66 R
62 0 V
108 -63 R
0 66 V
-31 -66 R
62 0 V
-62 66 R
62 0 V
169 -64 R
0 67 V
-31 -67 R
62 0 V
-62 67 R
62 0 V
105 -65 R
0 66 V
-31 -66 R
62 0 V
-62 66 R
62 0 V
305 -64 R
0 66 V
-31 -66 R
62 0 V
-62 66 R
62 0 V
109 -66 R
0 67 V
-31 -67 R
62 0 V
-62 67 R
62 0 V
86 -66 R
0 66 V
-31 -66 R
62 0 V
stroke
4330 1369 M
62 0 V
48 -66 R
0 66 V
-31 -66 R
62 0 V
-62 66 R
62 0 V
977 -65 R
0 66 V
-31 -66 R
62 0 V
-62 66 R
62 0 V
977 -65 R
0 65 V
-31 -65 R
62 0 V
-62 65 R
62 0 V
305 -66 R
0 66 V
-31 -66 R
62 0 V
-62 66 R
62 0 V
1080 844 Pls
1752 1120 Pls
2088 1213 Pls
2285 1252 Pls
2424 1272 Pls
2760 1304 Pls
3096 1320 Pls
3293 1326 Pls
3432 1329 Pls
3632 1332 Pls
3768 1333 Pls
4104 1335 Pls
4244 1336 Pls
4361 1336 Pls
4440 1336 Pls
5448 1337 Pls
6456 1337 Pls
6792 1337 Pls
2119 4569 Pls
2.000 UP
2.000 UL
LT1
LTb
1656 4329 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 (lzo)]
] -80.0 MRshow
grestore
LT1
1800 4329 M
639 0 V
-639 31 R
0 -62 V
639 62 R
0 -62 V
1080 1084 M
672 533 V
336 207 V
197 107 V
139 70 V
336 143 V
336 111 V
197 42 V
139 22 V
200 22 V
136 11 V
336 17 V
140 5 V
117 2 V
79 2 V
1008 8 V
1008 0 V
336 1 V
1080 1060 M
0 48 V
-31 -48 R
62 0 V
-62 48 R
62 0 V
641 457 R
0 104 V
-31 -104 R
62 0 V
-62 104 R
62 0 V
305 87 R
0 137 V
-31 -137 R
62 0 V
-62 137 R
62 0 V
166 -40 R
0 157 V
-31 -157 R
62 0 V
-62 157 R
62 0 V
108 -94 R
0 170 V
-31 -170 R
62 0 V
-62 170 R
62 0 V
305 -40 R
0 197 V
-31 -197 R
62 0 V
-62 197 R
62 0 V
305 -98 R
0 219 V
-31 -219 R
62 0 V
-62 219 R
62 0 V
166 -181 R
0 228 V
-31 -228 R
62 0 V
-62 228 R
62 0 V
108 -208 R
0 232 V
-31 -232 R
62 0 V
-62 232 R
62 0 V
169 -212 R
0 236 V
-31 -236 R
62 0 V
-62 236 R
62 0 V
105 -226 R
0 238 V
-31 -238 R
62 0 V
-62 238 R
62 0 V
305 -223 R
0 242 V
-31 -242 R
62 0 V
-62 242 R
62 0 V
109 -238 R
0 243 V
-31 -243 R
62 0 V
-62 243 R
62 0 V
86 -240 R
0 243 V
-31 -243 R
62 0 V
stroke
4330 2498 M
62 0 V
48 -242 R
0 244 V
-31 -244 R
62 0 V
-62 244 R
62 0 V
977 -237 R
0 245 V
-31 -245 R
62 0 V
-62 245 R
62 0 V
977 -245 R
0 247 V
-31 -247 R
62 0 V
-62 247 R
62 0 V
305 -246 R
0 246 V
-31 -246 R
62 0 V
-62 246 R
62 0 V
1080 1084 Crs
1752 1617 Crs
2088 1824 Crs
2285 1931 Crs
2424 2001 Crs
2760 2144 Crs
3096 2255 Crs
3293 2297 Crs
3432 2319 Crs
3632 2341 Crs
3768 2352 Crs
4104 2369 Crs
4244 2374 Crs
4361 2376 Crs
4440 2378 Crs
5448 2386 Crs
6456 2386 Crs
6792 2387 Crs
2119 4329 Crs
2.000 UP
2.000 UL
LT2
LTb
1656 4089 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 (gz)]
] -80.0 MRshow
grestore
LT2
1800 4089 M
639 0 V
-639 31 R
0 -62 V
639 62 R
0 -62 V
1080 1144 M
672 589 V
336 234 V
197 112 V
139 67 V
336 128 V
336 86 V
197 31 V
139 16 V
200 14 V
136 7 V
336 12 V
140 3 V
117 2 V
79 1 V
1008 5 V
1008 1 V
336 0 V
1080 1116 M
0 56 V
-31 -56 R
62 0 V
-62 56 R
62 0 V
641 505 R
0 112 V
-31 -112 R
62 0 V
-62 112 R
62 0 V
305 106 R
0 145 V
-31 -145 R
62 0 V
-62 145 R
62 0 V
166 -43 R
0 164 V
-31 -164 R
62 0 V
-62 164 R
62 0 V
108 -102 R
0 174 V
-31 -174 R
62 0 V
-62 174 R
62 0 V
305 -58 R
0 198 V
-31 -198 R
62 0 V
-62 198 R
62 0 V
305 -119 R
0 212 V
-31 -212 R
62 0 V
-62 212 R
62 0 V
166 -184 R
0 218 V
-31 -218 R
62 0 V
-62 218 R
62 0 V
108 -204 R
0 222 V
-31 -222 R
62 0 V
-62 222 R
62 0 V
169 -210 R
0 225 V
-31 -225 R
62 0 V
-62 225 R
62 0 V
105 -217 R
0 225 V
-31 -225 R
62 0 V
-62 225 R
62 0 V
305 -215 R
0 228 V
-31 -228 R
62 0 V
-62 228 R
62 0 V
109 -225 R
0 228 V
-31 -228 R
62 0 V
-62 228 R
62 0 V
86 -226 R
0 229 V
-31 -229 R
62 0 V
stroke
4330 2560 M
62 0 V
48 -228 R
0 229 V
-31 -229 R
62 0 V
-62 229 R
62 0 V
977 -224 R
0 229 V
-31 -229 R
62 0 V
-62 229 R
62 0 V
977 -229 R
0 230 V
-31 -230 R
62 0 V
-62 230 R
62 0 V
305 -230 R
0 230 V
-31 -230 R
62 0 V
-62 230 R
62 0 V
1080 1144 Star
1752 1733 Star
2088 1967 Star
2285 2079 Star
2424 2146 Star
2760 2274 Star
3096 2360 Star
3293 2391 Star
3432 2407 Star
3632 2421 Star
3768 2428 Star
4104 2440 Star
4244 2443 Star
4361 2445 Star
4440 2446 Star
5448 2451 Star
6456 2452 Star
6792 2452 Star
2119 4089 Star
2.000 UP
2.000 UL
LT3
LTb
1656 3849 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 (bz2)]
] -80.0 MRshow
grestore
LT3
1800 3849 M
639 0 V
-639 31 R
0 -62 V
639 62 R
0 -62 V
1080 980 M
672 714 V
336 385 V
197 233 V
139 178 V
336 433 V
336 378 V
197 183 V
139 113 V
200 136 V
136 78 V
336 148 V
140 48 V
117 37 V
79 -25 V
1008 39 V
1008 7 V
336 0 V
1080 958 M
0 45 V
-31 -45 R
62 0 V
-62 45 R
62 0 V
641 615 R
0 151 V
-31 -151 R
62 0 V
-62 151 R
62 0 V
305 208 R
0 204 V
-31 -204 R
62 0 V
-62 204 R
62 0 V
166 12 R
0 239 V
-31 -239 R
62 0 V
-62 239 R
62 0 V
108 -74 R
0 265 V
-31 -265 R
62 0 V
-62 265 R
62 0 V
305 125 R
0 349 V
-31 -349 R
62 0 V
-62 349 R
62 0 V
305 -7 R
0 422 V
-31 -422 R
62 0 V
-62 422 R
62 0 V
166 -257 R
0 457 V
-31 -457 R
62 0 V
-62 457 R
62 0 V
108 -355 R
0 480 V
-31 -480 R
62 0 V
-62 480 R
62 0 V
169 -358 R
0 508 V
-31 -508 R
62 0 V
-62 508 R
62 0 V
105 -438 R
0 523 V
-31 -523 R
62 0 V
-62 523 R
62 0 V
305 -390 R
0 553 V
-31 -553 R
62 0 V
-62 553 R
62 0 V
109 -509 R
0 562 V
-31 -562 R
62 0 V
-62 562 R
62 0 V
86 -529 R
0 570 V
-31 -570 R
62 0 V
stroke
4330 4329 M
62 0 V
48 -595 R
0 570 V
-31 -570 R
62 0 V
-62 570 R
62 0 V
977 -532 R
0 572 V
-31 -572 R
62 0 V
-62 572 R
62 0 V
977 -566 R
0 574 V
-31 -574 R
62 0 V
-62 574 R
62 0 V
305 -574 R
0 574 V
-31 -574 R
62 0 V
-62 574 R
62 0 V
1080 980 Box
1752 1694 Box
2088 2079 Box
2285 2312 Box
2424 2490 Box
2760 2923 Box
3096 3301 Box
3293 3484 Box
3432 3597 Box
3632 3733 Box
3768 3811 Box
4104 3959 Box
4244 4007 Box
4361 4044 Box
4440 4019 Box
5448 4058 Box
6456 4065 Box
6792 4065 Box
2119 3849 Box
1.000 UL
LTb
1080 720 M
5712 0 V
0 4032 V
-5712 0 V
0 -4032 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
