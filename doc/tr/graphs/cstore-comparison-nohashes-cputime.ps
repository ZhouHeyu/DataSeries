%!PS-Adobe-2.0
%%Title: cstore-comparison-nohashes-cputime.ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Tue Sep 11 17:21:01 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -80 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1080 480 M
5712 0 R
stroke
936 480 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1080 907 M
5712 0 R
stroke
936 907 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 5)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1080 1334 M
5712 0 R
stroke
936 1334 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 10)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1080 1762 M
5712 0 R
stroke
936 1762 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 15)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1080 2189 M
5712 0 R
stroke
936 2189 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 20)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1080 2616 M
5712 0 R
stroke
936 2616 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 25)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1080 3043 M
5712 0 R
stroke
936 3043 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 30)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1080 3470 M
5712 0 R
stroke
936 3470 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 35)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1080 3898 M
5712 0 R
stroke
936 3898 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 40)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1080 4325 M
5712 0 R
stroke
936 4325 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 45)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1080 4752 M
5712 0 R
stroke
936 4752 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 50)]
] -80.0 MRshow
grestore
1.000 UL
LTb
5942 480 M
0 4272 R
stroke
5942 240 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 (query columns)]
] -80.0 MCshow
grestore
1.000 UL
LTb
3840 480 M
0 4272 R
stroke
3840 240 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 (32 bit columns)]
] -80.0 MCshow
grestore
1.000 UL
LTb
1739 480 M
0 4272 R
stroke
1739 240 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 (all columns)]
] -80.0 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1080 480 M
5712 0 V
0 4272 V
-5712 0 V
0 -4272 V
LTb
240 2616 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 240.0 0.0 true true 0 (cpu \(user+sys\) time \(s\))]
] -80.0 MCshow
grestore
grestore
1.000 UP
1.000 UL
LT0
LTb
5721 4569 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 (SSD-generic Cold)]
] -80.0 MRshow
grestore
LT0
5865 4509 639 120 BoxFill
5865 4509 M
639 0 V
0 120 V
-639 0 V
0 -120 V
1166 4397 M
0 98 V
-31 -98 R
62 0 V
-62 98 R
62 0 V
3267 2075 M
0 26 V
-31 -26 R
62 0 V
-62 26 R
62 0 V
5369 1694 M
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
stroke
1080 480 173 3967 BoxFill
1080 480 M
0 3966 V
172 0 V
0 -3966 V
-172 0 V
stroke
3181 480 173 1609 BoxFill
3181 480 M
0 1608 V
172 0 V
0 -1608 V
-172 0 V
stroke
5283 480 173 1219 BoxFill
5283 480 M
0 1218 V
172 0 V
0 -1218 V
-172 0 V
1.000 UL
LT1
LTb
5721 4329 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 (SSD-generic Warm)]
] -80.0 MRshow
grestore
LT1
5865 4269 639 120 80 -45 1 PatternFill
5865 4269 M
639 0 V
0 120 V
-639 0 V
0 -120 V
-4508 83 R
0 61 V
-31 -61 R
62 0 V
-62 61 R
62 0 V
3458 2035 M
0 40 V
-31 -40 R
62 0 V
-62 40 R
62 0 V
5560 1675 M
0 15 V
-31 -15 R
62 0 V
-62 15 R
62 0 V
stroke
1271 480 173 3904 80 -45 1 PatternFill
1271 480 M
0 3903 V
172 0 V
0 -3903 V
-172 0 V
stroke
3372 480 173 1576 80 -45 1 PatternFill
3372 480 M
0 1575 V
172 0 V
0 -1575 V
-172 0 V
stroke
5474 480 173 1203 80 -45 1 PatternFill
5474 480 M
0 1202 V
172 0 V
0 -1202 V
-172 0 V
1.000 UL
LT2
LTb
5721 4089 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 (SSD-typed Cold)]
] -80.0 MRshow
grestore
LT2
5865 4029 639 120 40 45 2 PatternFill
5865 4029 M
639 0 V
0 120 V
-639 0 V
0 -120 V
-4317 75 R
0 45 V
-31 -45 R
62 0 V
-62 45 R
62 0 V
3649 1694 M
0 26 V
-31 -26 R
62 0 V
-62 26 R
62 0 V
5751 1317 M
0 23 V
-31 -23 R
62 0 V
-62 23 R
62 0 V
stroke
1462 480 173 3647 40 45 2 PatternFill
1462 480 M
0 3646 V
172 0 V
0 -3646 V
-172 0 V
stroke
3563 480 173 1228 40 45 2 PatternFill
3563 480 M
0 1227 V
172 0 V
0 -1227 V
-172 0 V
stroke
5665 480 173 850 40 45 2 PatternFill
5665 480 M
0 849 V
172 0 V
0 -849 V
-172 0 V
1.000 UL
LT3
LTb
5721 3849 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 (SSD-typed Warm)]
] -80.0 MRshow
grestore
LT3
1 5865 3789 639 120 BoxColFill
5865 3789 M
639 0 V
0 120 V
-639 0 V
0 -120 V
1739 3977 M
0 109 V
-31 -109 R
62 0 V
-62 109 R
62 0 V
3840 1664 M
0 22 V
-31 -22 R
62 0 V
-62 22 R
62 0 V
5942 1330 M
0 26 V
-31 -26 R
62 0 V
-62 26 R
62 0 V
stroke
1 1653 480 173 3552 BoxColFill
1653 480 M
0 3551 V
172 0 V
0 -3551 V
-172 0 V
stroke
1 3755 480 172 1196 BoxColFill
3755 480 M
0 1195 V
171 0 V
0 -1195 V
-171 0 V
stroke
1 5856 480 173 864 BoxColFill
5856 480 M
0 863 V
172 0 V
0 -863 V
-172 0 V
1.000 UL
LT4
LTb
5721 3609 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 (SSD-typed Cold simple stats)]
] -80.0 MRshow
grestore
LT4
5865 3549 639 120 80 45 0 PatternFill
5865 3549 M
639 0 V
0 120 V
-639 0 V
0 -120 V
1930 3823 M
0 128 V
-31 -128 R
62 0 V
-62 128 R
62 0 V
4032 1425 M
0 14 V
-31 -14 R
62 0 V
-62 14 R
62 0 V
6133 1108 M
0 40 V
-31 -40 R
62 0 V
-62 40 R
62 0 V
stroke
1844 480 173 3408 80 45 0 PatternFill
1844 480 M
0 3407 V
172 0 V
0 -3407 V
-172 0 V
stroke
3946 480 172 953 80 45 0 PatternFill
3946 480 M
0 952 V
171 0 V
0 -952 V
-171 0 V
stroke
6047 480 173 649 80 45 0 PatternFill
6047 480 M
0 648 V
172 0 V
0 -648 V
-172 0 V
1.000 UL
LT5
LTb
5721 3369 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 (SSD-typed Warm simple stats)]
] -80.0 MRshow
grestore
LT5
5865 3309 639 120 80 -45 0 PatternFill
5865 3309 M
639 0 V
0 120 V
-639 0 V
0 -120 V
2121 3623 M
0 265 V
-31 -265 R
62 0 V
-62 265 R
62 0 V
4223 1393 M
0 10 V
-31 -10 R
62 0 V
-62 10 R
62 0 V
6324 1102 M
0 5 V
-31 -5 R
62 0 V
-62 5 R
62 0 V
stroke
2035 480 173 3277 80 -45 0 PatternFill
2035 480 M
0 3276 V
172 0 V
0 -3276 V
-172 0 V
stroke
4137 480 173 919 80 -45 0 PatternFill
4137 480 M
0 918 V
172 0 V
0 -918 V
-172 0 V
stroke
6238 480 173 625 80 -45 0 PatternFill
6238 480 M
0 624 V
172 0 V
0 -624 V
-172 0 V
1.000 UL
LT6
LTb
5721 3129 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 (C-Store Cold)]
] -80.0 MRshow
grestore
LT6
5865 3069 639 120 40 30 0 PatternFill
5865 3069 M
639 0 V
0 120 V
-639 0 V
0 -120 V
2312 1520 M
0 11 V
-31 -11 R
62 0 V
-62 11 R
62 0 V
2071 -11 R
0 11 V
-31 -11 R
62 0 V
-62 11 R
62 0 V
2070 -11 R
0 11 V
-31 -11 R
62 0 V
-62 11 R
62 0 V
stroke
2226 480 173 1047 40 30 0 PatternFill
2226 480 M
0 1046 V
172 0 V
0 -1046 V
-172 0 V
stroke
4328 480 173 1047 40 30 0 PatternFill
4328 480 M
0 1046 V
172 0 V
0 -1046 V
-172 0 V
stroke
6429 480 173 1047 40 30 0 PatternFill
6429 480 M
0 1046 V
172 0 V
0 -1046 V
-172 0 V
1.000 UL
LT7
LTb
5721 2889 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 (C-Store Warm)]
] -80.0 MRshow
grestore
LT7
5865 2829 639 120 40 -30 0 PatternFill
5865 2829 M
639 0 V
0 120 V
-639 0 V
0 -120 V
2503 1420 M
0 22 V
-31 -22 R
62 0 V
-62 22 R
62 0 V
2071 -22 R
0 22 V
-31 -22 R
62 0 V
-62 22 R
62 0 V
2070 -22 R
0 22 V
-31 -22 R
62 0 V
-62 22 R
62 0 V
stroke
2417 480 173 952 40 -30 0 PatternFill
2417 480 M
0 951 V
172 0 V
0 -951 V
-172 0 V
stroke
4519 480 173 952 40 -30 0 PatternFill
4519 480 M
0 951 V
172 0 V
0 -951 V
-172 0 V
stroke
6620 480 173 952 40 -30 0 PatternFill
6620 480 M
0 951 V
172 0 V
0 -951 V
-172 0 V
1.000 UL
LTb
1080 480 M
5712 0 V
0 4272 V
-5712 0 V
0 -4272 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
