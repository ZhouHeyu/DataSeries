%!PS-Adobe-2.0
%%Title: plotComRateRatio-srt.ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Tue Sep 11 18:43:54 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -80 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1224 720 M
63 0 V
5505 0 R
-63 0 V
stroke
1080 720 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.1)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1224 1125 M
31 0 V
5537 0 R
-31 0 V
1224 1361 M
31 0 V
5537 0 R
-31 0 V
1224 1529 M
31 0 V
5537 0 R
-31 0 V
1224 1659 M
31 0 V
5537 0 R
-31 0 V
1224 1766 M
31 0 V
5537 0 R
-31 0 V
-5537 90 R
31 0 V
5537 0 R
-31 0 V
-5537 78 R
31 0 V
5537 0 R
-31 0 V
-5537 69 R
31 0 V
5537 0 R
-31 0 V
-5537 61 R
63 0 V
5505 0 R
-63 0 V
stroke
1080 2064 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 1)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1224 2469 M
31 0 V
5537 0 R
-31 0 V
1224 2705 M
31 0 V
5537 0 R
-31 0 V
1224 2873 M
31 0 V
5537 0 R
-31 0 V
1224 3003 M
31 0 V
5537 0 R
-31 0 V
1224 3110 M
31 0 V
5537 0 R
-31 0 V
-5537 90 R
31 0 V
5537 0 R
-31 0 V
-5537 78 R
31 0 V
5537 0 R
-31 0 V
-5537 69 R
31 0 V
5537 0 R
-31 0 V
-5537 61 R
63 0 V
5505 0 R
-63 0 V
stroke
1080 3408 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 10)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1224 3813 M
31 0 V
5537 0 R
-31 0 V
1224 4049 M
31 0 V
5537 0 R
-31 0 V
1224 4217 M
31 0 V
5537 0 R
-31 0 V
1224 4347 M
31 0 V
5537 0 R
-31 0 V
1224 4454 M
31 0 V
5537 0 R
-31 0 V
-5537 90 R
31 0 V
5537 0 R
-31 0 V
-5537 78 R
31 0 V
5537 0 R
-31 0 V
-5537 69 R
31 0 V
5537 0 R
-31 0 V
-5537 61 R
63 0 V
5505 0 R
-63 0 V
stroke
1080 4752 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 100)]
] -80.0 MRshow
grestore
1.000 UL
LTb
1224 720 M
0 63 V
0 3969 R
0 -63 V
stroke
1224 480 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MCshow
grestore
1.000 UL
LTb
2152 720 M
0 63 V
0 3969 R
0 -63 V
stroke
2152 480 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 2)]
] -80.0 MCshow
grestore
1.000 UL
LTb
3080 720 M
0 63 V
0 3969 R
0 -63 V
stroke
3080 480 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 4)]
] -80.0 MCshow
grestore
1.000 UL
LTb
4008 720 M
0 63 V
0 3969 R
0 -63 V
stroke
4008 480 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 6)]
] -80.0 MCshow
grestore
1.000 UL
LTb
4936 720 M
0 63 V
0 3969 R
0 -63 V
stroke
4936 480 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 8)]
] -80.0 MCshow
grestore
1.000 UL
LTb
5864 720 M
0 63 V
0 3969 R
0 -63 V
stroke
5864 480 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 10)]
] -80.0 MCshow
grestore
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
stroke
6792 480 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 ( 12)]
] -80.0 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1224 720 M
5568 0 V
0 4032 V
-5568 0 V
0 -4032 V
LTb
240 2736 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 240.0 0.0 true true 0 (Compression Rate \(MB/Sec.\) - Log Scale)]
] -80.0 MCshow
grestore
grestore
LTb
4008 120 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 (Average Compression Ratio)]
] -80.0 MCshow
grestore
1.000 UP
2.000 UP
2.000 UL
LT0
LTb
5721 4569 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 (lzo)]
] -80.0 MRshow
grestore
LT0
5865 4569 M
639 0 V
-639 31 R
0 -62 V
639 62 R
0 -62 V
2571 2952 M
613 -109 V
239 -212 V
123 -148 V
80 -85 V
165 -123 V
127 -110 V
49 -43 V
25 -21 V
26 -19 V
12 -8 V
20 -15 V
5 -4 V
3 -2 V
2 -3 V
9 -6 V
1 0 V
2571 2903 M
0 94 V
-31 -94 R
62 0 V
-62 94 R
62 0 V
582 -166 R
0 23 V
-31 -23 R
62 0 V
-62 23 R
62 0 V
208 -236 R
0 27 V
-31 -27 R
62 0 V
-62 27 R
62 0 V
92 -176 R
0 29 V
-31 -29 R
62 0 V
-62 29 R
62 0 V
49 -116 R
0 32 V
-31 -32 R
62 0 V
-62 32 R
62 0 V
134 -157 R
0 36 V
-31 -36 R
62 0 V
-62 36 R
62 0 V
96 -145 R
0 33 V
-31 -33 R
62 0 V
-62 33 R
62 0 V
18 -75 R
0 32 V
-31 -32 R
62 0 V
-62 32 R
62 0 V
-6 -53 R
0 32 V
-31 -32 R
62 0 V
-62 32 R
62 0 V
-5 -51 R
0 32 V
-31 -32 R
62 0 V
-62 32 R
62 0 V
-19 -40 R
0 31 V
-31 -31 R
62 0 V
-62 31 R
62 0 V
-11 -45 R
0 29 V
-31 -29 R
62 0 V
-62 29 R
62 0 V
-26 -33 R
0 29 V
-31 -29 R
62 0 V
-62 29 R
62 0 V
-28 -31 R
0 29 V
-31 -29 R
62 0 V
stroke
4027 2067 M
62 0 V
-29 -31 R
0 29 V
-31 -29 R
62 0 V
-62 29 R
62 0 V
-22 -35 R
0 29 V
-31 -29 R
62 0 V
-62 29 R
62 0 V
-30 -30 R
0 30 V
-31 -30 R
62 0 V
-62 30 R
62 0 V
-31 -29 R
0 29 V
-31 -29 R
62 0 V
-62 29 R
62 0 V
2571 2952 Pls
3184 2843 Pls
3423 2631 Pls
3546 2483 Pls
3626 2398 Pls
3791 2275 Pls
3918 2165 Pls
3967 2122 Pls
3992 2101 Pls
4018 2082 Pls
4030 2074 Pls
4050 2059 Pls
4055 2055 Pls
4058 2053 Pls
4060 2050 Pls
4069 2044 Pls
4070 2044 Pls
4070 2044 Pls
6184 4569 Pls
2.000 UP
2.000 UL
LT1
LTb
5721 4329 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 (lzf)]
] -80.0 MRshow
grestore
LT1
5865 4329 M
639 0 V
-639 31 R
0 -62 V
639 62 R
0 -62 V
2295 4541 M
317 122 V
107 23 V
45 15 V
24 -16 V
36 -24 V
19 18 V
6 -6 V
4 -41 V
3 2 V
1 0 V
3 -7 V
0 -4 V
1 2 V
0 -14 V
1 10 V
0 -1 V
0 7 V
-567 -93 R
0 15 V
-31 -15 R
62 0 V
-62 15 R
62 0 V
286 104 R
0 19 V
-31 -19 R
62 0 V
-62 19 R
62 0 V
76 8 R
0 12 V
-31 -12 R
62 0 V
-62 12 R
62 0 V
14 -3 R
0 24 V
-31 -24 R
62 0 V
-62 24 R
62 0 V
-7 -37 R
0 17 V
-31 -17 R
62 0 V
-62 17 R
62 0 V
5 -58 R
0 51 V
-31 -51 R
62 0 V
-62 51 R
62 0 V
-12 -19 R
0 24 V
-31 -24 R
62 0 V
-62 24 R
62 0 V
-25 -33 R
0 29 V
-31 -29 R
62 0 V
-62 29 R
62 0 V
-27 -73 R
0 36 V
-31 -36 R
62 0 V
-62 36 R
62 0 V
-28 -32 R
0 32 V
-31 -32 R
62 0 V
-62 32 R
62 0 V
-30 -27 R
0 22 V
-31 -22 R
62 0 V
-62 22 R
62 0 V
-28 -26 R
0 15 V
-31 -15 R
62 0 V
-62 15 R
62 0 V
-31 -22 R
0 22 V
-31 -22 R
62 0 V
-62 22 R
62 0 V
-30 -20 R
0 21 V
-31 -21 R
62 0 V
stroke
2830 4635 M
62 0 V
-31 -36 R
0 23 V
-31 -23 R
62 0 V
-62 23 R
62 0 V
-30 -16 R
0 29 V
-31 -29 R
62 0 V
-62 29 R
62 0 V
-31 -35 R
0 40 V
-31 -40 R
62 0 V
-62 40 R
62 0 V
-31 -30 R
0 33 V
-31 -33 R
62 0 V
-62 33 R
62 0 V
2295 4541 Crs
2612 4663 Crs
2719 4686 Crs
2764 4701 Crs
2788 4685 Crs
2824 4661 Crs
2843 4679 Crs
2849 4673 Crs
2853 4632 Crs
2856 4634 Crs
2857 4634 Crs
2860 4627 Crs
2860 4623 Crs
2861 4625 Crs
2861 4611 Crs
2862 4621 Crs
2862 4620 Crs
2862 4627 Crs
6184 4329 Crs
2.000 UP
2.000 UL
LT2
LTb
5721 4089 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 (gz)]
] -80.0 MRshow
grestore
LT2
5865 4089 M
639 0 V
-639 31 R
0 -62 V
639 62 R
0 -62 V
2640 3342 M
678 254 V
269 76 V
128 25 V
78 11 V
148 -1 V
98 -39 V
36 -14 V
18 -14 V
16 -5 V
9 -3 V
14 -7 V
3 -3 V
2 -2 V
2 0 V
5 -2 V
1 -2 V
2640 3306 M
0 70 V
-31 -70 R
62 0 V
-62 70 R
62 0 V
647 197 R
0 46 V
-31 -46 R
62 0 V
-62 46 R
62 0 V
238 38 R
0 29 V
-31 -29 R
62 0 V
-62 29 R
62 0 V
97 -4 R
0 30 V
-31 -30 R
62 0 V
-62 30 R
62 0 V
47 -20 R
0 32 V
-31 -32 R
62 0 V
-62 32 R
62 0 V
117 -37 R
0 39 V
-31 -39 R
62 0 V
-62 39 R
62 0 V
67 -75 R
0 33 V
-31 -33 R
62 0 V
-62 33 R
62 0 V
5 -47 R
0 34 V
-31 -34 R
62 0 V
-62 34 R
62 0 V
-13 -48 R
0 34 V
-31 -34 R
62 0 V
-62 34 R
62 0 V
-15 -41 R
0 37 V
-31 -37 R
62 0 V
-62 37 R
62 0 V
-22 -40 R
0 36 V
-31 -36 R
62 0 V
-62 36 R
62 0 V
-17 -43 R
0 37 V
-31 -37 R
62 0 V
-62 37 R
62 0 V
-28 -41 R
0 38 V
-31 -38 R
62 0 V
-62 38 R
62 0 V
-29 -38 R
0 36 V
-31 -36 R
62 0 V
stroke
4106 3638 M
62 0 V
-29 -36 R
0 36 V
-31 -36 R
62 0 V
-62 36 R
62 0 V
-26 -39 R
0 37 V
-31 -37 R
62 0 V
-62 37 R
62 0 V
-30 -39 R
0 38 V
-31 -38 R
62 0 V
-62 38 R
62 0 V
-31 -37 R
0 36 V
-31 -36 R
62 0 V
-62 36 R
62 0 V
2640 3342 Star
3318 3596 Star
3587 3672 Star
3715 3697 Star
3793 3708 Star
3941 3707 Star
4039 3668 Star
4075 3654 Star
4093 3640 Star
4109 3635 Star
4118 3632 Star
4132 3625 Star
4135 3622 Star
4137 3620 Star
4139 3620 Star
4144 3618 Star
4145 3616 Star
4145 3616 Star
6184 4089 Star
2.000 UP
2.000 UL
LT3
LTb
5721 3849 M
gsave 0 setgray
[ [(Helvetica) 240.0 0.0 true true 0 (bz2)]
] -80.0 MRshow
grestore
LT3
5865 3849 M
639 0 V
-639 31 R
0 -62 V
639 62 R
0 -62 V
2452 2729 M
821 61 V
443 47 V
268 -138 V
205 90 V
498 173 V
435 92 V
211 13 V
130 -1 V
157 -16 V
89 -19 V
170 -82 V
56 -50 V
42 -52 V
-29 -31 V
45 6 V
8 1 V
1 7 V
2452 2719 M
0 21 V
-31 -21 R
62 0 V
-62 21 R
62 0 V
790 35 R
0 29 V
-31 -29 R
62 0 V
-62 29 R
62 0 V
412 24 R
0 19 V
-31 -19 R
62 0 V
-62 19 R
62 0 V
237 -152 R
0 9 V
-31 -9 R
62 0 V
-62 9 R
62 0 V
174 81 R
0 9 V
-31 -9 R
62 0 V
-62 9 R
62 0 V
467 164 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
404 83 R
0 11 V
-31 -11 R
62 0 V
-62 11 R
62 0 V
180 0 R
0 14 V
-31 -14 R
62 0 V
-62 14 R
62 0 V
99 -16 R
0 16 V
-31 -16 R
62 0 V
-62 16 R
62 0 V
126 -35 R
0 21 V
-31 -21 R
62 0 V
-62 21 R
62 0 V
58 -40 R
0 22 V
-31 -22 R
62 0 V
-62 22 R
62 0 V
139 -112 R
0 38 V
-31 -38 R
62 0 V
-62 38 R
62 0 V
25 -87 R
0 36 V
-31 -36 R
62 0 V
-62 36 R
62 0 V
11 -90 R
0 38 V
-31 -38 R
62 0 V
stroke
5946 2865 M
62 0 V
-60 -76 R
0 53 V
-31 -53 R
62 0 V
-62 53 R
62 0 V
14 -48 R
0 54 V
-31 -54 R
62 0 V
-62 54 R
62 0 V
-23 -52 R
0 53 V
-31 -53 R
62 0 V
-62 53 R
62 0 V
-30 -43 R
0 48 V
-31 -48 R
62 0 V
-62 48 R
62 0 V
2452 2729 Box
3273 2790 Box
3716 2837 Box
3984 2699 Box
4189 2789 Box
4687 2962 Box
5122 3054 Box
5333 3067 Box
5463 3066 Box
5620 3050 Box
5709 3031 Box
5879 2949 Box
5935 2899 Box
5977 2847 Box
5948 2816 Box
5993 2822 Box
6001 2823 Box
6002 2830 Box
6184 3849 Box
1.000 UL
LTb
1224 720 M
5568 0 V
0 4032 V
-5568 0 V
0 -4032 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
