%!PS-Adobe-2.0 EPSF-2.0
%%Title: psplot-6352..ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon Jan  5 13:11:41 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -73 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
1.000 UL
LTb
1254 660 M
63 0 V
5509 0 R
-63 0 V
stroke
1122 660 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1254 1032 M
63 0 V
5509 0 R
-63 0 V
stroke
1122 1032 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 100)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1254 1404 M
63 0 V
5509 0 R
-63 0 V
stroke
1122 1404 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 200)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1254 1776 M
63 0 V
5509 0 R
-63 0 V
stroke
1122 1776 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 300)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1254 2148 M
63 0 V
5509 0 R
-63 0 V
stroke
1122 2148 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 400)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1254 2520 M
63 0 V
5509 0 R
-63 0 V
stroke
1122 2520 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 500)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1254 2892 M
63 0 V
5509 0 R
-63 0 V
stroke
1122 2892 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 600)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1254 3264 M
63 0 V
5509 0 R
-63 0 V
stroke
1122 3264 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 700)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1254 3636 M
63 0 V
5509 0 R
-63 0 V
stroke
1122 3636 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 800)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1254 4008 M
63 0 V
5509 0 R
-63 0 V
stroke
1122 4008 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 900)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1254 4380 M
63 0 V
5509 0 R
-63 0 V
stroke
1122 4380 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 1000)]
] -73.3 MRshow
grestore
1.000 UL
LTb
6825 660 M
0 63 V
0 3657 R
0 -63 V
stroke
6825 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (0.9999)]
] -73.3 MCshow
grestore
1.000 UL
LTb
5527 660 M
0 63 V
0 3657 R
0 -63 V
stroke
5527 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (0.9995)]
] -73.3 MCshow
grestore
1.000 UL
LTb
4968 660 M
0 63 V
0 3657 R
0 -63 V
stroke
4968 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (0.999)]
] -73.3 MCshow
grestore
1.000 UL
LTb
3670 660 M
0 63 V
0 3657 R
0 -63 V
stroke
3670 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (0.995)]
] -73.3 MCshow
grestore
1.000 UL
LTb
3111 660 M
0 63 V
0 3657 R
0 -63 V
stroke
3111 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (0.99)]
] -73.3 MCshow
grestore
1.000 UL
LTb
1813 660 M
0 63 V
0 3657 R
0 -63 V
stroke
1813 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (0.95)]
] -73.3 MCshow
grestore
1.000 UL
LTb
1254 660 M
0 63 V
0 3657 R
0 -63 V
stroke
1254 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (0.9)]
] -73.3 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1254 660 M
5572 0 V
0 3720 V
-5572 0 V
0 -3720 V
LTb
220 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (kpps)]
] -73.3 MCshow
grestore
grestore
LTb
4040 110 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (Quantile)]
] -73.3 MCshow
grestore
LTb
4040 4710 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (Tail of the capture rates)]
] -73.3 MCshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
5610 4207 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (anim-2007/set-5, 1ms intervals)]
] -73.3 MRshow
grestore
LT0
5742 4207 M
591 0 V
1254 1813 M
559 335 V
1298 703 V
559 268 V
1298 591 V
559 346 V
1298 194 V
1 0 V
1254 1813 Pls
1813 2148 Pls
3111 2851 Pls
3670 3119 Pls
4968 3710 Pls
5527 4056 Pls
6825 4250 Pls
6037 4207 Pls
1.000 UP
1.000 UL
LT1
LTb
5610 3987 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (anim-2007/set-5, 10ms intervals)]
] -73.3 MRshow
grestore
LT1
5742 3987 M
591 0 V
1254 1765 M
559 311 V
1298 669 V
559 266 V
1298 570 V
559 184 V
1298 86 V
1 0 V
1254 1765 Crs
1813 2076 Crs
3111 2745 Crs
3670 3011 Crs
4968 3581 Crs
5527 3765 Crs
6825 3851 Crs
6037 3987 Crs
1.000 UP
1.000 UL
LT2
LTb
5610 3767 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (anim-2007/set-5, 1s intervals)]
] -73.3 MRshow
grestore
LT2
5742 3767 M
591 0 V
1254 1693 M
559 282 V
1298 639 V
559 263 V
1298 306 V
559 160 V
1298 108 V
1 1 V
1254 1693 Star
1813 1975 Star
3111 2614 Star
3670 2877 Star
4968 3183 Star
5527 3343 Star
6825 3451 Star
6037 3767 Star
1.000 UP
1.000 UL
LT3
LTb
5610 3547 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (anim-2007/set-5, 60s intervals)]
] -73.3 MRshow
grestore
LT3
5742 3547 M
591 0 V
1254 1620 M
559 232 V
1298 585 V
559 194 V
1298 359 V
559 164 V
1298 106 V
1 0 V
1254 1620 Box
1813 1852 Box
3111 2437 Box
3670 2631 Box
4968 2990 Box
5527 3154 Box
6825 3260 Box
6037 3547 Box
1.000 UP
1.000 UL
LT4
LTb
5610 3327 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (anim-2003/set-12, 1ms intervals)]
] -73.3 MRshow
grestore
LT4
5742 3327 M
591 0 V
1254 932 M
559 63 V
1298 134 V
559 41 V
1298 96 V
559 30 V
1298 141 V
1 0 V
1254 932 BoxF
1813 995 BoxF
3111 1129 BoxF
3670 1170 BoxF
4968 1266 BoxF
5527 1296 BoxF
6825 1437 BoxF
6037 3327 BoxF
1.000 UP
1.000 UL
LT5
LTb
5610 3107 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (anim-2003/set-12, 10ms intervals)]
] -73.3 MRshow
grestore
LT5
5742 3107 M
591 0 V
1254 906 M
559 48 V
1298 134 V
559 55 V
1298 83 V
559 20 V
1298 122 V
1 0 V
1254 906 Circle
1813 954 Circle
3111 1088 Circle
3670 1143 Circle
4968 1226 Circle
5527 1246 Circle
6825 1368 Circle
6037 3107 Circle
1.000 UP
1.000 UL
LT6
LTb
5610 2887 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (anim-2003/set-12, 1s intervals)]
] -73.3 MRshow
grestore
LT6
5742 2887 M
591 0 V
1254 879 M
559 38 V
1298 147 V
559 59 V
1298 68 V
559 37 V
1298 0 V
1 0 V
1254 879 CircleF
1813 917 CircleF
3111 1064 CircleF
3670 1123 CircleF
4968 1191 CircleF
5527 1228 CircleF
6825 1228 CircleF
6037 2887 CircleF
1.000 UP
1.000 UL
LT7
LTb
5610 2667 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (anim-2003/set-12, 60s intervals)]
] -73.3 MRshow
grestore
LT7
5742 2667 M
591 0 V
1254 864 M
559 32 V
1298 119 V
559 96 V
1298 25 V
559 9 V
1254 864 TriU
1813 896 TriU
3111 1015 TriU
3670 1111 TriU
4968 1136 TriU
5527 1145 TriU
6037 2667 TriU
1.000 UL
LTb
1254 660 M
5572 0 V
0 3720 V
-5572 0 V
0 -3720 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
