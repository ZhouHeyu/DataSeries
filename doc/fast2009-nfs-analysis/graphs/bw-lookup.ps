%!PS-Adobe-2.0 EPSF-2.0
%%Title: psplot-15522..ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Sun Sep 14 15:30:02 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 180 scalefont setfont
1.000 UL
LTb
918 540 M
63 0 V
5913 0 R
-63 0 V
stroke
810 540 M
gsave 0 setgray
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MRshow
grestore
1.000 UL
LTb
918 1332 M
63 0 V
5913 0 R
-63 0 V
stroke
810 1332 M
gsave 0 setgray
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.5)]
] -60.0 MRshow
grestore
1.000 UL
LTb
918 2124 M
63 0 V
5913 0 R
-63 0 V
stroke
810 2124 M
gsave 0 setgray
[ [(Helvetica) 180.0 0.0 true true 0 ( 1)]
] -60.0 MRshow
grestore
1.000 UL
LTb
918 2916 M
63 0 V
5913 0 R
-63 0 V
stroke
810 2916 M
gsave 0 setgray
[ [(Helvetica) 180.0 0.0 true true 0 ( 1.5)]
] -60.0 MRshow
grestore
1.000 UL
LTb
918 3708 M
63 0 V
5913 0 R
-63 0 V
stroke
810 3708 M
gsave 0 setgray
[ [(Helvetica) 180.0 0.0 true true 0 ( 2)]
] -60.0 MRshow
grestore
1.000 UL
LTb
918 4500 M
63 0 V
5913 0 R
-63 0 V
stroke
810 4500 M
gsave 0 setgray
[ [(Helvetica) 180.0 0.0 true true 0 ( 2.5)]
] -60.0 MRshow
grestore
1.000 UL
LTb
918 540 M
0 63 V
0 3897 R
0 -63 V
stroke
918 360 M
gsave 0 setgray
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MCshow
grestore
1.000 UL
LTb
1516 540 M
0 63 V
0 3897 R
0 -63 V
stroke
1516 360 M
gsave 0 setgray
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.1)]
] -60.0 MCshow
grestore
1.000 UL
LTb
2113 540 M
0 63 V
0 3897 R
0 -63 V
stroke
2113 360 M
gsave 0 setgray
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.2)]
] -60.0 MCshow
grestore
1.000 UL
LTb
2711 540 M
0 63 V
0 3897 R
0 -63 V
stroke
2711 360 M
gsave 0 setgray
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.3)]
] -60.0 MCshow
grestore
1.000 UL
LTb
3308 540 M
0 63 V
0 3897 R
0 -63 V
stroke
3308 360 M
gsave 0 setgray
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.4)]
] -60.0 MCshow
grestore
1.000 UL
LTb
3906 540 M
0 63 V
0 3897 R
0 -63 V
stroke
3906 360 M
gsave 0 setgray
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.5)]
] -60.0 MCshow
grestore
1.000 UL
LTb
4504 540 M
0 63 V
0 3897 R
0 -63 V
stroke
4504 360 M
gsave 0 setgray
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.6)]
] -60.0 MCshow
grestore
1.000 UL
LTb
5101 540 M
0 63 V
0 3897 R
0 -63 V
stroke
5101 360 M
gsave 0 setgray
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.7)]
] -60.0 MCshow
grestore
1.000 UL
LTb
5699 540 M
0 63 V
0 3897 R
0 -63 V
stroke
5699 360 M
gsave 0 setgray
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.8)]
] -60.0 MCshow
grestore
1.000 UL
LTb
6296 540 M
0 63 V
0 3897 R
0 -63 V
stroke
6296 360 M
gsave 0 setgray
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.9)]
] -60.0 MCshow
grestore
1.000 UL
LTb
6894 540 M
0 63 V
0 3897 R
0 -63 V
stroke
6894 360 M
gsave 0 setgray
[ [(Helvetica) 180.0 0.0 true true 0 ( 1)]
] -60.0 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
918 540 M
5976 0 V
0 3960 V
-5976 0 V
918 540 L
LTb
180 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 180.0 0.0 true true 0 (MiB/s)]
] -60.0 MCshow
grestore
grestore
LTb
3906 90 M
gsave 0 setgray
[ [(Helvetica) 180.0 0.0 true true 0 (Quantile)]
] -60.0 MCshow
grestore
LTb
3906 4770 M
gsave 0 setgray
[ [(Helvetica) 180.0 0.0 true true 0 (lookup MiB/second)]
] -60.0 MCshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
5022 4347 M
gsave 0 setgray
[ [(Helvetica) 180.0 0.0 true true 0 (nfs-1/set-5, 1s interval,  lookup bw)]
] -60.0 MRshow
grestore
LT0
5130 4347 M
495 0 V
918 540 M
60 2 V
60 1 V
59 1 V
60 1 V
60 1 V
60 0 V
59 1 V
60 1 V
60 0 V
60 1 V
59 1 V
60 0 V
60 1 V
60 1 V
59 0 V
60 1 V
60 1 V
60 1 V
59 1 V
60 0 V
60 1 V
60 1 V
59 1 V
60 1 V
60 0 V
60 1 V
60 1 V
59 1 V
60 1 V
60 1 V
60 1 V
59 1 V
60 1 V
60 1 V
60 1 V
59 1 V
60 2 V
60 1 V
60 1 V
59 1 V
60 1 V
60 2 V
60 1 V
59 1 V
60 1 V
60 2 V
60 1 V
59 1 V
60 2 V
60 1 V
60 1 V
60 2 V
59 1 V
60 2 V
60 1 V
60 1 V
59 2 V
60 1 V
60 2 V
60 1 V
59 2 V
60 2 V
60 1 V
60 2 V
59 2 V
60 2 V
60 2 V
60 2 V
59 1 V
60 3 V
60 2 V
60 2 V
59 3 V
60 2 V
60 3 V
60 2 V
60 3 V
59 3 V
60 3 V
60 3 V
60 4 V
59 3 V
60 4 V
60 4 V
60 4 V
59 4 V
60 6 V
60 5 V
60 6 V
59 6 V
60 8 V
60 7 V
60 11 V
59 11 V
60 13 V
60 19 V
60 24 V
59 37 V
60 81 V
918 540 Pls
978 542 Pls
1038 543 Pls
1097 544 Pls
1157 545 Pls
1217 546 Pls
1277 546 Pls
1336 547 Pls
1396 548 Pls
1456 548 Pls
1516 549 Pls
1575 550 Pls
1635 550 Pls
1695 551 Pls
1755 552 Pls
1814 552 Pls
1874 553 Pls
1934 554 Pls
1994 555 Pls
2053 556 Pls
2113 556 Pls
2173 557 Pls
2233 558 Pls
2292 559 Pls
2352 560 Pls
2412 560 Pls
2472 561 Pls
2532 562 Pls
2591 563 Pls
2651 564 Pls
2711 565 Pls
2771 566 Pls
2830 567 Pls
2890 568 Pls
2950 569 Pls
3010 570 Pls
3069 571 Pls
3129 573 Pls
3189 574 Pls
3249 575 Pls
3308 576 Pls
3368 577 Pls
3428 579 Pls
3488 580 Pls
3547 581 Pls
3607 582 Pls
3667 584 Pls
3727 585 Pls
3786 586 Pls
3846 588 Pls
3906 589 Pls
3966 590 Pls
4026 592 Pls
4085 593 Pls
4145 595 Pls
4205 596 Pls
4265 597 Pls
4324 599 Pls
4384 600 Pls
4444 602 Pls
4504 603 Pls
4563 605 Pls
4623 607 Pls
4683 608 Pls
4743 610 Pls
4802 612 Pls
4862 614 Pls
4922 616 Pls
4982 618 Pls
5041 619 Pls
5101 622 Pls
5161 624 Pls
5221 626 Pls
5280 629 Pls
5340 631 Pls
5400 634 Pls
5460 636 Pls
5520 639 Pls
5579 642 Pls
5639 645 Pls
5699 648 Pls
5759 652 Pls
5818 655 Pls
5878 659 Pls
5938 663 Pls
5998 667 Pls
6057 671 Pls
6117 677 Pls
6177 682 Pls
6237 688 Pls
6296 694 Pls
6356 702 Pls
6416 709 Pls
6476 720 Pls
6535 731 Pls
6595 744 Pls
6655 763 Pls
6715 787 Pls
6774 824 Pls
6834 905 Pls
5377 4347 Pls
1.000 UP
1.000 UL
LT1
LTb
5022 4167 M
gsave 0 setgray
[ [(Helvetica) 180.0 0.0 true true 0 (nfs-1/set-12, 1s interval,  lookup bw)]
] -60.0 MRshow
grestore
LT1
5130 4167 M
495 0 V
918 581 M
60 26 V
60 15 V
59 11 V
60 10 V
60 8 V
60 7 V
59 7 V
60 7 V
60 6 V
60 6 V
59 6 V
60 6 V
60 4 V
60 6 V
59 5 V
60 5 V
60 6 V
60 4 V
59 6 V
60 4 V
60 5 V
60 5 V
59 5 V
60 5 V
60 4 V
60 5 V
60 4 V
59 4 V
60 5 V
60 4 V
60 4 V
59 4 V
60 4 V
60 5 V
60 4 V
59 4 V
60 3 V
60 4 V
60 4 V
59 4 V
60 4 V
60 4 V
60 4 V
59 4 V
60 4 V
60 4 V
60 4 V
59 4 V
60 4 V
60 3 V
60 4 V
60 5 V
59 4 V
60 3 V
60 5 V
60 4 V
59 4 V
60 4 V
60 4 V
60 5 V
59 4 V
60 5 V
60 5 V
60 5 V
59 5 V
60 5 V
60 6 V
60 5 V
59 6 V
60 6 V
60 6 V
60 7 V
59 6 V
60 7 V
60 8 V
60 9 V
60 8 V
59 8 V
60 9 V
60 9 V
60 9 V
59 10 V
60 12 V
60 12 V
60 14 V
59 14 V
60 15 V
60 15 V
60 17 V
59 20 V
60 20 V
60 23 V
60 28 V
59 30 V
60 36 V
60 44 V
60 55 V
59 71 V
60 135 V
918 581 Crs
978 607 Crs
1038 622 Crs
1097 633 Crs
1157 643 Crs
1217 651 Crs
1277 658 Crs
1336 665 Crs
1396 672 Crs
1456 678 Crs
1516 684 Crs
1575 690 Crs
1635 696 Crs
1695 700 Crs
1755 706 Crs
1814 711 Crs
1874 716 Crs
1934 722 Crs
1994 726 Crs
2053 732 Crs
2113 736 Crs
2173 741 Crs
2233 746 Crs
2292 751 Crs
2352 756 Crs
2412 760 Crs
2472 765 Crs
2532 769 Crs
2591 773 Crs
2651 778 Crs
2711 782 Crs
2771 786 Crs
2830 790 Crs
2890 794 Crs
2950 799 Crs
3010 803 Crs
3069 807 Crs
3129 810 Crs
3189 814 Crs
3249 818 Crs
3308 822 Crs
3368 826 Crs
3428 830 Crs
3488 834 Crs
3547 838 Crs
3607 842 Crs
3667 846 Crs
3727 850 Crs
3786 854 Crs
3846 858 Crs
3906 861 Crs
3966 865 Crs
4026 870 Crs
4085 874 Crs
4145 877 Crs
4205 882 Crs
4265 886 Crs
4324 890 Crs
4384 894 Crs
4444 898 Crs
4504 903 Crs
4563 907 Crs
4623 912 Crs
4683 917 Crs
4743 922 Crs
4802 927 Crs
4862 932 Crs
4922 938 Crs
4982 943 Crs
5041 949 Crs
5101 955 Crs
5161 961 Crs
5221 968 Crs
5280 974 Crs
5340 981 Crs
5400 989 Crs
5460 998 Crs
5520 1006 Crs
5579 1014 Crs
5639 1023 Crs
5699 1032 Crs
5759 1041 Crs
5818 1051 Crs
5878 1063 Crs
5938 1075 Crs
5998 1089 Crs
6057 1103 Crs
6117 1118 Crs
6177 1133 Crs
6237 1150 Crs
6296 1170 Crs
6356 1190 Crs
6416 1213 Crs
6476 1241 Crs
6535 1271 Crs
6595 1307 Crs
6655 1351 Crs
6715 1406 Crs
6774 1477 Crs
6834 1612 Crs
5377 4167 Crs
1.000 UP
1.000 UL
LT2
LTb
5022 3987 M
gsave 0 setgray
[ [(Helvetica) 180.0 0.0 true true 0 (nfs-2/set-2, 1s interval,  lookup bw)]
] -60.0 MRshow
grestore
LT2
5130 3987 M
495 0 V
918 540 M
60 15 V
60 27 V
59 19 V
60 17 V
60 14 V
60 13 V
59 10 V
60 11 V
60 10 V
60 9 V
59 9 V
60 9 V
60 7 V
60 8 V
59 7 V
60 8 V
60 7 V
60 7 V
59 7 V
60 7 V
60 6 V
60 7 V
59 6 V
60 7 V
60 6 V
60 7 V
60 6 V
59 6 V
60 7 V
60 6 V
60 6 V
59 6 V
60 6 V
60 6 V
60 6 V
59 7 V
60 5 V
60 7 V
60 6 V
59 7 V
60 6 V
60 6 V
60 7 V
59 6 V
60 7 V
60 6 V
60 7 V
59 7 V
60 7 V
60 7 V
60 7 V
60 7 V
59 7 V
60 7 V
60 8 V
60 8 V
59 7 V
60 8 V
60 8 V
60 7 V
59 9 V
60 8 V
60 9 V
60 9 V
59 9 V
60 9 V
60 10 V
60 10 V
59 10 V
60 10 V
60 11 V
60 11 V
59 11 V
60 12 V
60 13 V
60 12 V
60 14 V
59 14 V
60 15 V
60 16 V
60 17 V
59 17 V
60 18 V
60 21 V
60 21 V
59 24 V
60 23 V
60 28 V
60 30 V
59 36 V
60 37 V
60 41 V
60 53 V
59 54 V
60 73 V
60 90 V
60 115 V
59 171 V
60 285 V
918 540 Star
978 555 Star
1038 582 Star
1097 601 Star
1157 618 Star
1217 632 Star
1277 645 Star
1336 655 Star
1396 666 Star
1456 676 Star
1516 685 Star
1575 694 Star
1635 703 Star
1695 710 Star
1755 718 Star
1814 725 Star
1874 733 Star
1934 740 Star
1994 747 Star
2053 754 Star
2113 761 Star
2173 767 Star
2233 774 Star
2292 780 Star
2352 787 Star
2412 793 Star
2472 800 Star
2532 806 Star
2591 812 Star
2651 819 Star
2711 825 Star
2771 831 Star
2830 837 Star
2890 843 Star
2950 849 Star
3010 855 Star
3069 862 Star
3129 867 Star
3189 874 Star
3249 880 Star
3308 887 Star
3368 893 Star
3428 899 Star
3488 906 Star
3547 912 Star
3607 919 Star
3667 925 Star
3727 932 Star
3786 939 Star
3846 946 Star
3906 953 Star
3966 960 Star
4026 967 Star
4085 974 Star
4145 981 Star
4205 989 Star
4265 997 Star
4324 1004 Star
4384 1012 Star
4444 1020 Star
4504 1027 Star
4563 1036 Star
4623 1044 Star
4683 1053 Star
4743 1062 Star
4802 1071 Star
4862 1080 Star
4922 1090 Star
4982 1100 Star
5041 1110 Star
5101 1120 Star
5161 1131 Star
5221 1142 Star
5280 1153 Star
5340 1165 Star
5400 1178 Star
5460 1190 Star
5520 1204 Star
5579 1218 Star
5639 1233 Star
5699 1249 Star
5759 1266 Star
5818 1283 Star
5878 1301 Star
5938 1322 Star
5998 1343 Star
6057 1367 Star
6117 1390 Star
6177 1418 Star
6237 1448 Star
6296 1484 Star
6356 1521 Star
6416 1562 Star
6476 1615 Star
6535 1669 Star
6595 1742 Star
6655 1832 Star
6715 1947 Star
6774 2118 Star
6834 2403 Star
5377 3987 Star
1.000 UP
1.000 UL
LT3
LTb
5022 3807 M
gsave 0 setgray
[ [(Helvetica) 180.0 0.0 true true 0 (nfs-2/set-5, 1s interval,  lookup bw)]
] -60.0 MRshow
grestore
LT3
5130 3807 M
495 0 V
918 540 M
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
60 0 V
59 0 V
60 0 V
60 0 V
60 0 V
59 0 V
60 1 V
60 2 V
60 5 V
59 6 V
60 9 V
60 11 V
60 12 V
60 14 V
59 16 V
60 16 V
60 17 V
60 20 V
59 17 V
60 17 V
60 17 V
60 19 V
59 18 V
60 19 V
60 17 V
60 19 V
59 17 V
60 17 V
60 18 V
60 18 V
59 17 V
60 17 V
60 16 V
60 16 V
59 18 V
60 16 V
60 17 V
60 18 V
60 17 V
59 16 V
60 17 V
60 17 V
60 17 V
59 17 V
60 16 V
60 18 V
60 18 V
59 19 V
60 17 V
60 20 V
60 18 V
59 19 V
60 19 V
60 21 V
60 19 V
59 22 V
60 22 V
60 22 V
60 22 V
59 23 V
60 25 V
60 25 V
60 26 V
60 25 V
59 30 V
60 30 V
60 29 V
60 34 V
59 32 V
60 39 V
60 37 V
60 42 V
59 42 V
60 51 V
60 51 V
60 59 V
59 63 V
60 78 V
60 86 V
60 100 V
59 120 V
60 149 V
60 192 V
60 254 V
59 408 V
60 772 V
918 540 Box
978 540 Box
1038 540 Box
1097 540 Box
1157 540 Box
1217 540 Box
1277 540 Box
1336 540 Box
1396 540 Box
1456 540 Box
1516 540 Box
1575 540 Box
1635 540 Box
1695 540 Box
1755 540 Box
1814 540 Box
1874 540 Box
1934 540 Box
1994 540 Box
2053 540 Box
2113 541 Box
2173 543 Box
2233 548 Box
2292 554 Box
2352 563 Box
2412 574 Box
2472 586 Box
2532 600 Box
2591 616 Box
2651 632 Box
2711 649 Box
2771 669 Box
2830 686 Box
2890 703 Box
2950 720 Box
3010 739 Box
3069 757 Box
3129 776 Box
3189 793 Box
3249 812 Box
3308 829 Box
3368 846 Box
3428 864 Box
3488 882 Box
3547 899 Box
3607 916 Box
3667 932 Box
3727 948 Box
3786 966 Box
3846 982 Box
3906 999 Box
3966 1017 Box
4026 1034 Box
4085 1050 Box
4145 1067 Box
4205 1084 Box
4265 1101 Box
4324 1118 Box
4384 1134 Box
4444 1152 Box
4504 1170 Box
4563 1189 Box
4623 1206 Box
4683 1226 Box
4743 1244 Box
4802 1263 Box
4862 1282 Box
4922 1303 Box
4982 1322 Box
5041 1344 Box
5101 1366 Box
5161 1388 Box
5221 1410 Box
5280 1433 Box
5340 1458 Box
5400 1483 Box
5460 1509 Box
5520 1534 Box
5579 1564 Box
5639 1594 Box
5699 1623 Box
5759 1657 Box
5818 1689 Box
5878 1728 Box
5938 1765 Box
5998 1807 Box
6057 1849 Box
6117 1900 Box
6177 1951 Box
6237 2010 Box
6296 2073 Box
6356 2151 Box
6416 2237 Box
6476 2337 Box
6535 2457 Box
6595 2606 Box
6655 2798 Box
6715 3052 Box
6774 3460 Box
6834 4232 Box
5377 3807 Box
1.000 UL
LTb
918 540 M
5976 0 V
0 3960 V
-5976 0 V
918 540 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
