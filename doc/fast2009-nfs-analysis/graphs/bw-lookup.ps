%!PS-Adobe-2.0 EPSF-2.0
%%Title: psplot-6352..ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon Jan  5 13:28:59 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -73 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
1.000 UL
LTb
1122 660 M
63 0 V
5641 0 R
-63 0 V
stroke
990 660 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1122 1404 M
63 0 V
5641 0 R
-63 0 V
stroke
990 1404 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.5)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1122 2148 M
63 0 V
5641 0 R
-63 0 V
stroke
990 2148 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 1)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1122 2892 M
63 0 V
5641 0 R
-63 0 V
stroke
990 2892 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 1.5)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1122 3636 M
63 0 V
5641 0 R
-63 0 V
stroke
990 3636 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 2)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1122 4380 M
63 0 V
5641 0 R
-63 0 V
stroke
990 4380 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 2.5)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1122 660 M
0 63 V
0 3657 R
0 -63 V
stroke
1122 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MCshow
grestore
1.000 UL
LTb
1692 660 M
0 63 V
0 3657 R
0 -63 V
stroke
1692 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.1)]
] -73.3 MCshow
grestore
1.000 UL
LTb
2263 660 M
0 63 V
0 3657 R
0 -63 V
stroke
2263 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.2)]
] -73.3 MCshow
grestore
1.000 UL
LTb
2833 660 M
0 63 V
0 3657 R
0 -63 V
stroke
2833 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.3)]
] -73.3 MCshow
grestore
1.000 UL
LTb
3404 660 M
0 63 V
0 3657 R
0 -63 V
stroke
3404 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.4)]
] -73.3 MCshow
grestore
1.000 UL
LTb
3974 660 M
0 63 V
0 3657 R
0 -63 V
stroke
3974 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.5)]
] -73.3 MCshow
grestore
1.000 UL
LTb
4544 660 M
0 63 V
0 3657 R
0 -63 V
stroke
4544 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.6)]
] -73.3 MCshow
grestore
1.000 UL
LTb
5115 660 M
0 63 V
0 3657 R
0 -63 V
stroke
5115 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.7)]
] -73.3 MCshow
grestore
1.000 UL
LTb
5685 660 M
0 63 V
0 3657 R
0 -63 V
stroke
5685 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.8)]
] -73.3 MCshow
grestore
1.000 UL
LTb
6256 660 M
0 63 V
0 3657 R
0 -63 V
stroke
6256 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.9)]
] -73.3 MCshow
grestore
1.000 UL
LTb
6826 660 M
0 63 V
0 3657 R
0 -63 V
stroke
6826 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 1)]
] -73.3 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1122 660 M
5704 0 V
0 3720 V
-5704 0 V
0 -3720 V
LTb
220 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (MiB/s)]
] -73.3 MCshow
grestore
grestore
LTb
3974 110 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (Quantile)]
] -73.3 MCshow
grestore
LTb
3974 4710 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (lookup MiB/second)]
] -73.3 MCshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
6666 4207 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (anim-2003/set-5, 1s interval,  lookup bw)]
] -73.3 MRshow
grestore
LT0
6798 4207 M
591 0 V
1122 660 M
57 2 V
57 1 V
57 1 V
57 0 V
57 1 V
57 1 V
57 1 V
57 0 V
57 1 V
57 0 V
57 1 V
57 1 V
58 0 V
57 1 V
57 1 V
57 0 V
57 1 V
57 1 V
57 1 V
57 0 V
57 1 V
57 1 V
57 1 V
57 0 V
57 1 V
57 1 V
57 1 V
57 1 V
57 1 V
57 1 V
57 1 V
57 1 V
57 1 V
57 1 V
57 1 V
57 1 V
57 1 V
58 1 V
57 1 V
57 1 V
57 1 V
57 1 V
57 1 V
57 2 V
57 1 V
57 1 V
57 1 V
57 1 V
57 2 V
57 1 V
57 1 V
57 2 V
57 1 V
57 1 V
57 1 V
57 2 V
57 1 V
57 2 V
57 1 V
57 1 V
57 2 V
57 2 V
58 1 V
57 2 V
57 2 V
57 1 V
57 2 V
57 2 V
57 2 V
57 2 V
57 2 V
57 2 V
57 2 V
57 3 V
57 2 V
57 2 V
57 3 V
57 3 V
57 2 V
57 4 V
57 3 V
57 3 V
57 4 V
57 3 V
57 4 V
57 5 V
57 4 V
58 5 V
57 6 V
57 6 V
57 7 V
57 7 V
57 10 V
57 10 V
57 13 V
57 18 V
57 22 V
57 35 V
57 76 V
1122 660 Pls
1179 662 Pls
1236 663 Pls
1293 664 Pls
1350 664 Pls
1407 665 Pls
1464 666 Pls
1521 667 Pls
1578 667 Pls
1635 668 Pls
1692 668 Pls
1749 669 Pls
1806 670 Pls
1864 670 Pls
1921 671 Pls
1978 672 Pls
2035 672 Pls
2092 673 Pls
2149 674 Pls
2206 675 Pls
2263 675 Pls
2320 676 Pls
2377 677 Pls
2434 678 Pls
2491 678 Pls
2548 679 Pls
2605 680 Pls
2662 681 Pls
2719 682 Pls
2776 683 Pls
2833 684 Pls
2890 685 Pls
2947 686 Pls
3004 687 Pls
3061 688 Pls
3118 689 Pls
3175 690 Pls
3232 691 Pls
3290 692 Pls
3347 693 Pls
3404 694 Pls
3461 695 Pls
3518 696 Pls
3575 697 Pls
3632 699 Pls
3689 700 Pls
3746 701 Pls
3803 702 Pls
3860 703 Pls
3917 705 Pls
3974 706 Pls
4031 707 Pls
4088 709 Pls
4145 710 Pls
4202 711 Pls
4259 712 Pls
4316 714 Pls
4373 715 Pls
4430 717 Pls
4487 718 Pls
4544 719 Pls
4601 721 Pls
4658 723 Pls
4716 724 Pls
4773 726 Pls
4830 728 Pls
4887 729 Pls
4944 731 Pls
5001 733 Pls
5058 735 Pls
5115 737 Pls
5172 739 Pls
5229 741 Pls
5286 743 Pls
5343 746 Pls
5400 748 Pls
5457 750 Pls
5514 753 Pls
5571 756 Pls
5628 758 Pls
5685 762 Pls
5742 765 Pls
5799 768 Pls
5856 772 Pls
5913 775 Pls
5970 779 Pls
6027 784 Pls
6084 788 Pls
6142 793 Pls
6199 799 Pls
6256 805 Pls
6313 812 Pls
6370 819 Pls
6427 829 Pls
6484 839 Pls
6541 852 Pls
6598 870 Pls
6655 892 Pls
6712 927 Pls
6769 1003 Pls
7093 4207 Pls
1.000 UP
1.000 UL
LT1
LTb
6666 3987 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (anim-2003/set-12, 1s interval,  lookup bw)]
] -73.3 MRshow
grestore
LT1
6798 3987 M
591 0 V
1122 699 M
57 24 V
57 14 V
57 10 V
57 9 V
57 8 V
57 7 V
57 7 V
57 6 V
57 5 V
57 6 V
57 6 V
57 5 V
58 5 V
57 5 V
57 5 V
57 5 V
57 5 V
57 4 V
57 5 V
57 4 V
57 5 V
57 5 V
57 4 V
57 5 V
57 4 V
57 4 V
57 4 V
57 4 V
57 4 V
57 4 V
57 4 V
57 4 V
57 4 V
57 4 V
57 4 V
57 4 V
57 3 V
58 4 V
57 3 V
57 4 V
57 4 V
57 3 V
57 4 V
57 4 V
57 4 V
57 3 V
57 4 V
57 4 V
57 3 V
57 4 V
57 4 V
57 4 V
57 3 V
57 4 V
57 4 V
57 4 V
57 3 V
57 5 V
57 4 V
57 4 V
57 4 V
57 5 V
58 4 V
57 5 V
57 4 V
57 6 V
57 4 V
57 6 V
57 5 V
57 5 V
57 6 V
57 7 V
57 6 V
57 6 V
57 8 V
57 8 V
57 8 V
57 8 V
57 8 V
57 8 V
57 9 V
57 9 V
57 11 V
57 12 V
57 12 V
57 14 V
57 14 V
58 14 V
57 16 V
57 19 V
57 19 V
57 21 V
57 26 V
57 29 V
57 33 V
57 42 V
57 52 V
57 66 V
57 127 V
1122 699 Crs
1179 723 Crs
1236 737 Crs
1293 747 Crs
1350 756 Crs
1407 764 Crs
1464 771 Crs
1521 778 Crs
1578 784 Crs
1635 789 Crs
1692 795 Crs
1749 801 Crs
1806 806 Crs
1864 811 Crs
1921 816 Crs
1978 821 Crs
2035 826 Crs
2092 831 Crs
2149 835 Crs
2206 840 Crs
2263 844 Crs
2320 849 Crs
2377 854 Crs
2434 858 Crs
2491 863 Crs
2548 867 Crs
2605 871 Crs
2662 875 Crs
2719 879 Crs
2776 883 Crs
2833 887 Crs
2890 891 Crs
2947 895 Crs
3004 899 Crs
3061 903 Crs
3118 907 Crs
3175 911 Crs
3232 914 Crs
3290 918 Crs
3347 921 Crs
3404 925 Crs
3461 929 Crs
3518 932 Crs
3575 936 Crs
3632 940 Crs
3689 944 Crs
3746 947 Crs
3803 951 Crs
3860 955 Crs
3917 958 Crs
3974 962 Crs
4031 966 Crs
4088 970 Crs
4145 973 Crs
4202 977 Crs
4259 981 Crs
4316 985 Crs
4373 988 Crs
4430 993 Crs
4487 997 Crs
4544 1001 Crs
4601 1005 Crs
4658 1010 Crs
4716 1014 Crs
4773 1019 Crs
4830 1023 Crs
4887 1029 Crs
4944 1033 Crs
5001 1039 Crs
5058 1044 Crs
5115 1049 Crs
5172 1055 Crs
5229 1062 Crs
5286 1068 Crs
5343 1074 Crs
5400 1082 Crs
5457 1090 Crs
5514 1098 Crs
5571 1106 Crs
5628 1114 Crs
5685 1122 Crs
5742 1131 Crs
5799 1140 Crs
5856 1151 Crs
5913 1163 Crs
5970 1175 Crs
6027 1189 Crs
6084 1203 Crs
6142 1217 Crs
6199 1233 Crs
6256 1252 Crs
6313 1271 Crs
6370 1292 Crs
6427 1318 Crs
6484 1347 Crs
6541 1380 Crs
6598 1422 Crs
6655 1474 Crs
6712 1540 Crs
6769 1667 Crs
7093 3987 Crs
1.000 UP
1.000 UL
LT2
LTb
6666 3767 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (anim-2007/set-2, 1s interval,  lookup bw)]
] -73.3 MRshow
grestore
LT2
6798 3767 M
591 0 V
1122 660 M
57 14 V
57 25 V
57 19 V
57 15 V
57 13 V
57 12 V
57 10 V
57 11 V
57 9 V
57 8 V
57 9 V
57 8 V
58 7 V
57 7 V
57 7 V
57 7 V
57 7 V
57 7 V
57 6 V
57 6 V
57 6 V
57 7 V
57 6 V
57 6 V
57 6 V
57 6 V
57 6 V
57 6 V
57 6 V
57 6 V
57 5 V
57 6 V
57 6 V
57 5 V
57 6 V
57 6 V
57 6 V
58 6 V
57 6 V
57 6 V
57 6 V
57 5 V
57 7 V
57 6 V
57 6 V
57 6 V
57 6 V
57 7 V
57 6 V
57 7 V
57 6 V
57 7 V
57 7 V
57 7 V
57 7 V
57 7 V
57 7 V
57 7 V
57 8 V
57 7 V
57 8 V
57 8 V
58 8 V
57 8 V
57 9 V
57 8 V
57 10 V
57 9 V
57 9 V
57 10 V
57 10 V
57 11 V
57 10 V
57 11 V
57 12 V
57 12 V
57 13 V
57 13 V
57 14 V
57 15 V
57 16 V
57 16 V
57 17 V
57 20 V
57 19 V
57 23 V
57 22 V
58 26 V
57 28 V
57 33 V
57 35 V
57 40 V
57 49 V
57 50 V
57 69 V
57 84 V
57 109 V
57 160 V
57 268 V
1122 660 Star
1179 674 Star
1236 699 Star
1293 718 Star
1350 733 Star
1407 746 Star
1464 758 Star
1521 768 Star
1578 779 Star
1635 788 Star
1692 796 Star
1749 805 Star
1806 813 Star
1864 820 Star
1921 827 Star
1978 834 Star
2035 841 Star
2092 848 Star
2149 855 Star
2206 861 Star
2263 867 Star
2320 873 Star
2377 880 Star
2434 886 Star
2491 892 Star
2548 898 Star
2605 904 Star
2662 910 Star
2719 916 Star
2776 922 Star
2833 928 Star
2890 933 Star
2947 939 Star
3004 945 Star
3061 950 Star
3118 956 Star
3175 962 Star
3232 968 Star
3290 974 Star
3347 980 Star
3404 986 Star
3461 992 Star
3518 997 Star
3575 1004 Star
3632 1010 Star
3689 1016 Star
3746 1022 Star
3803 1028 Star
3860 1035 Star
3917 1041 Star
3974 1048 Star
4031 1054 Star
4088 1061 Star
4145 1068 Star
4202 1075 Star
4259 1082 Star
4316 1089 Star
4373 1096 Star
4430 1103 Star
4487 1111 Star
4544 1118 Star
4601 1126 Star
4658 1134 Star
4716 1142 Star
4773 1150 Star
4830 1159 Star
4887 1167 Star
4944 1177 Star
5001 1186 Star
5058 1195 Star
5115 1205 Star
5172 1215 Star
5229 1226 Star
5286 1236 Star
5343 1247 Star
5400 1259 Star
5457 1271 Star
5514 1284 Star
5571 1297 Star
5628 1311 Star
5685 1326 Star
5742 1342 Star
5799 1358 Star
5856 1375 Star
5913 1395 Star
5970 1414 Star
6027 1437 Star
6084 1459 Star
6142 1485 Star
6199 1513 Star
6256 1546 Star
6313 1581 Star
6370 1621 Star
6427 1670 Star
6484 1720 Star
6541 1789 Star
6598 1873 Star
6655 1982 Star
6712 2142 Star
6769 2410 Star
7093 3767 Star
1.000 UP
1.000 UL
LT3
LTb
6666 3547 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (anim-2007/set-5, 1s interval,  lookup bw)]
] -73.3 MRshow
grestore
LT3
6798 3547 M
591 0 V
1122 660 M
57 0 V
57 0 V
57 0 V
57 0 V
57 0 V
57 0 V
57 0 V
57 0 V
57 0 V
57 0 V
57 0 V
57 0 V
58 0 V
57 0 V
57 0 V
57 0 V
57 0 V
57 0 V
57 0 V
57 1 V
57 2 V
57 4 V
57 6 V
57 9 V
57 10 V
57 11 V
57 13 V
57 15 V
57 16 V
57 16 V
57 18 V
57 16 V
57 16 V
57 16 V
57 18 V
57 17 V
57 18 V
58 16 V
57 17 V
57 17 V
57 16 V
57 16 V
57 17 V
57 16 V
57 16 V
57 15 V
57 16 V
57 16 V
57 16 V
57 16 V
57 16 V
57 16 V
57 15 V
57 16 V
57 16 V
57 16 V
57 16 V
57 15 V
57 17 V
57 17 V
57 18 V
57 16 V
58 19 V
57 16 V
57 19 V
57 17 V
57 20 V
57 18 V
57 20 V
57 21 V
57 21 V
57 20 V
57 22 V
57 23 V
57 24 V
57 24 V
57 24 V
57 28 V
57 28 V
57 27 V
57 32 V
57 31 V
57 36 V
57 35 V
57 39 V
57 40 V
57 48 V
58 47 V
57 56 V
57 59 V
57 74 V
57 80 V
57 94 V
57 113 V
57 139 V
57 181 V
57 239 V
57 383 V
57 726 V
1122 660 Box
1179 660 Box
1236 660 Box
1293 660 Box
1350 660 Box
1407 660 Box
1464 660 Box
1521 660 Box
1578 660 Box
1635 660 Box
1692 660 Box
1749 660 Box
1806 660 Box
1864 660 Box
1921 660 Box
1978 660 Box
2035 660 Box
2092 660 Box
2149 660 Box
2206 660 Box
2263 661 Box
2320 663 Box
2377 667 Box
2434 673 Box
2491 682 Box
2548 692 Box
2605 703 Box
2662 716 Box
2719 731 Box
2776 747 Box
2833 763 Box
2890 781 Box
2947 797 Box
3004 813 Box
3061 829 Box
3118 847 Box
3175 864 Box
3232 882 Box
3290 898 Box
3347 915 Box
3404 932 Box
3461 948 Box
3518 964 Box
3575 981 Box
3632 997 Box
3689 1013 Box
3746 1028 Box
3803 1044 Box
3860 1060 Box
3917 1076 Box
3974 1092 Box
4031 1108 Box
4088 1124 Box
4145 1139 Box
4202 1155 Box
4259 1171 Box
4316 1187 Box
4373 1203 Box
4430 1218 Box
4487 1235 Box
4544 1252 Box
4601 1270 Box
4658 1286 Box
4716 1305 Box
4773 1321 Box
4830 1340 Box
4887 1357 Box
4944 1377 Box
5001 1395 Box
5058 1415 Box
5115 1436 Box
5172 1457 Box
5229 1477 Box
5286 1499 Box
5343 1522 Box
5400 1546 Box
5457 1570 Box
5514 1594 Box
5571 1622 Box
5628 1650 Box
5685 1677 Box
5742 1709 Box
5799 1740 Box
5856 1776 Box
5913 1811 Box
5970 1850 Box
6027 1890 Box
6084 1938 Box
6142 1985 Box
6199 2041 Box
6256 2100 Box
6313 2174 Box
6370 2254 Box
6427 2348 Box
6484 2461 Box
6541 2600 Box
6598 2781 Box
6655 3020 Box
6712 3403 Box
6769 4129 Box
7093 3547 Box
1.000 UL
LTb
1122 660 M
5704 0 V
0 3720 V
-5704 0 V
0 -3720 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
