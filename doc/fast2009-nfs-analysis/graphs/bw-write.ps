%!PS-Adobe-2.0 EPSF-2.0
%%Title: psplot-6352..ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon Jan  5 13:28:19 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -73 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
1.000 UL
LTb
990 660 M
63 0 V
5773 0 R
-63 0 V
stroke
858 660 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MRshow
grestore
1.000 UL
LTb
990 1125 M
63 0 V
5773 0 R
-63 0 V
stroke
858 1125 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 5)]
] -73.3 MRshow
grestore
1.000 UL
LTb
990 1590 M
63 0 V
5773 0 R
-63 0 V
stroke
858 1590 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 10)]
] -73.3 MRshow
grestore
1.000 UL
LTb
990 2055 M
63 0 V
5773 0 R
-63 0 V
stroke
858 2055 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 15)]
] -73.3 MRshow
grestore
1.000 UL
LTb
990 2520 M
63 0 V
5773 0 R
-63 0 V
stroke
858 2520 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 20)]
] -73.3 MRshow
grestore
1.000 UL
LTb
990 2985 M
63 0 V
5773 0 R
-63 0 V
stroke
858 2985 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 25)]
] -73.3 MRshow
grestore
1.000 UL
LTb
990 3450 M
63 0 V
5773 0 R
-63 0 V
stroke
858 3450 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 30)]
] -73.3 MRshow
grestore
1.000 UL
LTb
990 3915 M
63 0 V
5773 0 R
-63 0 V
stroke
858 3915 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 35)]
] -73.3 MRshow
grestore
1.000 UL
LTb
990 4380 M
63 0 V
5773 0 R
-63 0 V
stroke
858 4380 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 40)]
] -73.3 MRshow
grestore
1.000 UL
LTb
990 660 M
0 63 V
0 3657 R
0 -63 V
stroke
990 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MCshow
grestore
1.000 UL
LTb
1574 660 M
0 63 V
0 3657 R
0 -63 V
stroke
1574 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.1)]
] -73.3 MCshow
grestore
1.000 UL
LTb
2157 660 M
0 63 V
0 3657 R
0 -63 V
stroke
2157 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.2)]
] -73.3 MCshow
grestore
1.000 UL
LTb
2741 660 M
0 63 V
0 3657 R
0 -63 V
stroke
2741 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.3)]
] -73.3 MCshow
grestore
1.000 UL
LTb
3324 660 M
0 63 V
0 3657 R
0 -63 V
stroke
3324 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.4)]
] -73.3 MCshow
grestore
1.000 UL
LTb
3908 660 M
0 63 V
0 3657 R
0 -63 V
stroke
3908 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.5)]
] -73.3 MCshow
grestore
1.000 UL
LTb
4492 660 M
0 63 V
0 3657 R
0 -63 V
stroke
4492 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.6)]
] -73.3 MCshow
grestore
1.000 UL
LTb
5075 660 M
0 63 V
0 3657 R
0 -63 V
stroke
5075 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.7)]
] -73.3 MCshow
grestore
1.000 UL
LTb
5659 660 M
0 63 V
0 3657 R
0 -63 V
stroke
5659 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.8)]
] -73.3 MCshow
grestore
1.000 UL
LTb
6242 660 M
0 63 V
0 3657 R
0 -63 V
stroke
6242 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.9)]
] -73.3 MCshow
grestore
1.000 UL
LTb
6826 660 M
0 63 V
0 3657 R
0 -63 V
stroke
6826 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 1)]
] -73.3 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
990 660 M
5836 0 V
0 3720 V
-5836 0 V
990 660 L
LTb
220 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (MiB/s)]
] -73.3 MCshow
grestore
grestore
LTb
3908 110 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (Quantile)]
] -73.3 MCshow
grestore
LTb
3908 4710 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (write MiB/second)]
] -73.3 MCshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
6402 4207 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (anim-2003/set-5, 1s interval,  write bw)]
] -73.3 MRshow
grestore
LT0
6534 4207 M
591 0 V
990 660 M
58 0 V
59 0 V
58 0 V
58 0 V
59 0 V
58 0 V
59 0 V
58 0 V
58 0 V
59 0 V
58 0 V
58 0 V
59 0 V
58 0 V
58 0 V
59 0 V
58 0 V
58 0 V
59 0 V
58 0 V
59 0 V
58 0 V
58 0 V
59 0 V
58 0 V
58 0 V
59 1 V
58 1 V
58 2 V
59 3 V
58 3 V
59 3 V
58 4 V
58 4 V
59 4 V
58 4 V
58 4 V
59 0 V
58 1 V
58 4 V
59 3 V
58 4 V
58 4 V
59 3 V
58 4 V
59 4 V
58 3 V
58 3 V
59 1 V
58 3 V
58 3 V
59 4 V
58 2 V
58 3 V
59 3 V
58 3 V
59 3 V
58 3 V
58 3 V
59 3 V
58 2 V
58 3 V
59 3 V
58 3 V
58 3 V
59 3 V
58 3 V
58 4 V
59 3 V
58 3 V
59 4 V
58 3 V
58 4 V
59 4 V
58 5 V
58 4 V
59 5 V
58 5 V
58 6 V
59 6 V
58 7 V
59 7 V
58 8 V
58 9 V
59 10 V
58 11 V
58 13 V
59 17 V
58 22 V
58 27 V
59 30 V
58 27 V
58 27 V
59 31 V
58 40 V
59 68 V
58 189 V
58 242 V
59 167 V
990 660 Pls
1048 660 Pls
1107 660 Pls
1165 660 Pls
1223 660 Pls
1282 660 Pls
1340 660 Pls
1399 660 Pls
1457 660 Pls
1515 660 Pls
1574 660 Pls
1632 660 Pls
1690 660 Pls
1749 660 Pls
1807 660 Pls
1865 660 Pls
1924 660 Pls
1982 660 Pls
2040 660 Pls
2099 660 Pls
2157 660 Pls
2216 660 Pls
2274 660 Pls
2332 660 Pls
2391 660 Pls
2449 660 Pls
2507 660 Pls
2566 661 Pls
2624 662 Pls
2682 664 Pls
2741 667 Pls
2799 670 Pls
2858 673 Pls
2916 677 Pls
2974 681 Pls
3033 685 Pls
3091 689 Pls
3149 693 Pls
3208 693 Pls
3266 694 Pls
3324 698 Pls
3383 701 Pls
3441 705 Pls
3499 709 Pls
3558 712 Pls
3616 716 Pls
3675 720 Pls
3733 723 Pls
3791 726 Pls
3850 727 Pls
3908 730 Pls
3966 733 Pls
4025 737 Pls
4083 739 Pls
4141 742 Pls
4200 745 Pls
4258 748 Pls
4317 751 Pls
4375 754 Pls
4433 757 Pls
4492 760 Pls
4550 762 Pls
4608 765 Pls
4667 768 Pls
4725 771 Pls
4783 774 Pls
4842 777 Pls
4900 780 Pls
4958 784 Pls
5017 787 Pls
5075 790 Pls
5134 794 Pls
5192 797 Pls
5250 801 Pls
5309 805 Pls
5367 810 Pls
5425 814 Pls
5484 819 Pls
5542 824 Pls
5600 830 Pls
5659 836 Pls
5717 843 Pls
5776 850 Pls
5834 858 Pls
5892 867 Pls
5951 877 Pls
6009 888 Pls
6067 901 Pls
6126 918 Pls
6184 940 Pls
6242 967 Pls
6301 997 Pls
6359 1024 Pls
6417 1051 Pls
6476 1082 Pls
6534 1122 Pls
6593 1190 Pls
6651 1379 Pls
6709 1621 Pls
6768 1788 Pls
6829 4207 Pls
1.000 UP
1.000 UL
LT1
LTb
6402 3987 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (anim-2003/set-12, 1s interval,  write bw)]
] -73.3 MRshow
grestore
LT1
6534 3987 M
591 0 V
990 660 M
58 1 V
59 1 V
58 2 V
58 0 V
59 1 V
58 0 V
59 1 V
58 0 V
58 1 V
59 0 V
58 1 V
58 0 V
59 1 V
58 0 V
58 0 V
59 1 V
58 0 V
58 1 V
59 0 V
58 1 V
59 1 V
58 0 V
58 1 V
59 1 V
58 1 V
58 1 V
59 1 V
58 1 V
58 2 V
59 2 V
58 2 V
59 2 V
58 4 V
58 4 V
59 3 V
58 4 V
58 3 V
59 4 V
58 2 V
58 3 V
59 2 V
58 2 V
58 2 V
59 2 V
58 2 V
59 2 V
58 2 V
58 2 V
59 3 V
58 3 V
58 4 V
59 4 V
58 4 V
58 6 V
59 6 V
58 7 V
59 8 V
58 8 V
58 8 V
59 9 V
58 8 V
58 11 V
59 11 V
58 12 V
58 10 V
59 12 V
58 9 V
58 12 V
59 12 V
58 14 V
59 12 V
58 12 V
58 16 V
59 15 V
58 14 V
58 18 V
59 17 V
58 21 V
58 17 V
59 21 V
58 24 V
59 27 V
58 35 V
58 46 V
59 50 V
58 53 V
58 60 V
59 63 V
58 51 V
58 64 V
59 60 V
58 52 V
58 56 V
59 76 V
58 64 V
59 79 V
58 107 V
58 156 V
59 236 V
990 660 Crs
1048 661 Crs
1107 662 Crs
1165 664 Crs
1223 664 Crs
1282 665 Crs
1340 665 Crs
1399 666 Crs
1457 666 Crs
1515 667 Crs
1574 667 Crs
1632 668 Crs
1690 668 Crs
1749 669 Crs
1807 669 Crs
1865 669 Crs
1924 670 Crs
1982 670 Crs
2040 671 Crs
2099 671 Crs
2157 672 Crs
2216 673 Crs
2274 673 Crs
2332 674 Crs
2391 675 Crs
2449 676 Crs
2507 677 Crs
2566 678 Crs
2624 679 Crs
2682 681 Crs
2741 683 Crs
2799 685 Crs
2858 687 Crs
2916 691 Crs
2974 695 Crs
3033 698 Crs
3091 702 Crs
3149 705 Crs
3208 709 Crs
3266 711 Crs
3324 714 Crs
3383 716 Crs
3441 718 Crs
3499 720 Crs
3558 722 Crs
3616 724 Crs
3675 726 Crs
3733 728 Crs
3791 730 Crs
3850 733 Crs
3908 736 Crs
3966 740 Crs
4025 744 Crs
4083 748 Crs
4141 754 Crs
4200 760 Crs
4258 767 Crs
4317 775 Crs
4375 783 Crs
4433 791 Crs
4492 800 Crs
4550 808 Crs
4608 819 Crs
4667 830 Crs
4725 842 Crs
4783 852 Crs
4842 864 Crs
4900 873 Crs
4958 885 Crs
5017 897 Crs
5075 911 Crs
5134 923 Crs
5192 935 Crs
5250 951 Crs
5309 966 Crs
5367 980 Crs
5425 998 Crs
5484 1015 Crs
5542 1036 Crs
5600 1053 Crs
5659 1074 Crs
5717 1098 Crs
5776 1125 Crs
5834 1160 Crs
5892 1206 Crs
5951 1256 Crs
6009 1309 Crs
6067 1369 Crs
6126 1432 Crs
6184 1483 Crs
6242 1547 Crs
6301 1607 Crs
6359 1659 Crs
6417 1715 Crs
6476 1791 Crs
6534 1855 Crs
6593 1934 Crs
6651 2041 Crs
6709 2197 Crs
6768 2433 Crs
6829 3987 Crs
1.000 UP
1.000 UL
LT2
LTb
6402 3767 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (anim-2007/set-2, 1s interval,  write bw)]
] -73.3 MRshow
grestore
LT2
6534 3767 M
591 0 V
990 660 M
58 0 V
59 0 V
58 0 V
58 0 V
59 0 V
58 1 V
59 0 V
58 0 V
58 0 V
59 0 V
58 0 V
58 0 V
59 0 V
58 1 V
58 0 V
59 0 V
58 0 V
58 0 V
59 0 V
58 0 V
59 0 V
58 0 V
58 0 V
59 1 V
58 0 V
58 0 V
59 0 V
58 0 V
58 0 V
59 0 V
58 0 V
59 0 V
58 0 V
58 1 V
59 0 V
58 0 V
58 0 V
59 0 V
58 0 V
58 0 V
59 0 V
58 1 V
58 0 V
59 0 V
58 0 V
59 0 V
58 0 V
58 0 V
59 1 V
58 0 V
58 0 V
59 0 V
58 1 V
58 0 V
59 0 V
58 0 V
59 1 V
58 0 V
58 0 V
59 1 V
58 0 V
58 1 V
59 1 V
58 0 V
58 1 V
59 1 V
58 1 V
58 2 V
59 1 V
58 2 V
59 1 V
58 2 V
58 1 V
59 2 V
58 1 V
58 1 V
59 2 V
58 2 V
58 2 V
59 2 V
58 3 V
59 3 V
58 4 V
58 3 V
59 5 V
58 4 V
58 6 V
59 7 V
58 8 V
58 11 V
59 15 V
58 19 V
58 30 V
59 44 V
58 71 V
59 127 V
58 254 V
58 497 V
59 553 V
990 660 Star
1048 660 Star
1107 660 Star
1165 660 Star
1223 660 Star
1282 660 Star
1340 661 Star
1399 661 Star
1457 661 Star
1515 661 Star
1574 661 Star
1632 661 Star
1690 661 Star
1749 661 Star
1807 662 Star
1865 662 Star
1924 662 Star
1982 662 Star
2040 662 Star
2099 662 Star
2157 662 Star
2216 662 Star
2274 662 Star
2332 662 Star
2391 663 Star
2449 663 Star
2507 663 Star
2566 663 Star
2624 663 Star
2682 663 Star
2741 663 Star
2799 663 Star
2858 663 Star
2916 663 Star
2974 664 Star
3033 664 Star
3091 664 Star
3149 664 Star
3208 664 Star
3266 664 Star
3324 664 Star
3383 664 Star
3441 665 Star
3499 665 Star
3558 665 Star
3616 665 Star
3675 665 Star
3733 665 Star
3791 665 Star
3850 666 Star
3908 666 Star
3966 666 Star
4025 666 Star
4083 667 Star
4141 667 Star
4200 667 Star
4258 667 Star
4317 668 Star
4375 668 Star
4433 668 Star
4492 669 Star
4550 669 Star
4608 670 Star
4667 671 Star
4725 671 Star
4783 672 Star
4842 673 Star
4900 674 Star
4958 676 Star
5017 677 Star
5075 679 Star
5134 680 Star
5192 682 Star
5250 683 Star
5309 685 Star
5367 686 Star
5425 687 Star
5484 689 Star
5542 691 Star
5600 693 Star
5659 695 Star
5717 698 Star
5776 701 Star
5834 705 Star
5892 708 Star
5951 713 Star
6009 717 Star
6067 723 Star
6126 730 Star
6184 738 Star
6242 749 Star
6301 764 Star
6359 783 Star
6417 813 Star
6476 857 Star
6534 928 Star
6593 1055 Star
6651 1309 Star
6709 1806 Star
6768 2359 Star
6829 3767 Star
1.000 UP
1.000 UL
LT3
LTb
6402 3547 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (anim-2007/set-5, 1s interval,  write bw)]
] -73.3 MRshow
grestore
LT3
6534 3547 M
591 0 V
990 660 M
58 0 V
59 0 V
58 0 V
58 0 V
59 0 V
58 0 V
59 0 V
58 0 V
58 0 V
59 0 V
58 0 V
58 0 V
59 0 V
58 0 V
58 0 V
59 0 V
58 0 V
58 0 V
59 0 V
58 0 V
59 0 V
58 0 V
58 0 V
59 0 V
58 0 V
58 0 V
59 0 V
58 0 V
58 0 V
59 0 V
58 0 V
59 0 V
58 0 V
58 0 V
59 0 V
58 0 V
58 0 V
59 0 V
58 0 V
58 0 V
59 0 V
58 0 V
58 0 V
59 0 V
58 0 V
59 0 V
58 0 V
58 0 V
59 0 V
58 0 V
58 0 V
59 0 V
58 0 V
58 0 V
59 0 V
58 0 V
59 0 V
58 0 V
58 0 V
59 0 V
58 0 V
58 1 V
59 0 V
58 0 V
58 0 V
59 1 V
58 1 V
58 0 V
59 0 V
58 1 V
59 1 V
58 1 V
58 1 V
59 2 V
58 2 V
58 2 V
59 2 V
58 2 V
58 3 V
59 4 V
58 3 V
59 5 V
58 7 V
58 7 V
59 10 V
58 12 V
58 17 V
59 22 V
58 24 V
58 32 V
59 53 V
58 71 V
58 104 V
59 103 V
58 143 V
59 269 V
58 389 V
58 682 V
59 1294 V
990 660 Box
1048 660 Box
1107 660 Box
1165 660 Box
1223 660 Box
1282 660 Box
1340 660 Box
1399 660 Box
1457 660 Box
1515 660 Box
1574 660 Box
1632 660 Box
1690 660 Box
1749 660 Box
1807 660 Box
1865 660 Box
1924 660 Box
1982 660 Box
2040 660 Box
2099 660 Box
2157 660 Box
2216 660 Box
2274 660 Box
2332 660 Box
2391 660 Box
2449 660 Box
2507 660 Box
2566 660 Box
2624 660 Box
2682 660 Box
2741 660 Box
2799 660 Box
2858 660 Box
2916 660 Box
2974 660 Box
3033 660 Box
3091 660 Box
3149 660 Box
3208 660 Box
3266 660 Box
3324 660 Box
3383 660 Box
3441 660 Box
3499 660 Box
3558 660 Box
3616 660 Box
3675 660 Box
3733 660 Box
3791 660 Box
3850 660 Box
3908 660 Box
3966 660 Box
4025 660 Box
4083 660 Box
4141 660 Box
4200 660 Box
4258 660 Box
4317 660 Box
4375 660 Box
4433 660 Box
4492 660 Box
4550 660 Box
4608 661 Box
4667 661 Box
4725 661 Box
4783 661 Box
4842 662 Box
4900 663 Box
4958 663 Box
5017 663 Box
5075 664 Box
5134 665 Box
5192 666 Box
5250 667 Box
5309 669 Box
5367 671 Box
5425 673 Box
5484 675 Box
5542 677 Box
5600 680 Box
5659 684 Box
5717 687 Box
5776 692 Box
5834 699 Box
5892 706 Box
5951 716 Box
6009 728 Box
6067 745 Box
6126 767 Box
6184 791 Box
6242 823 Box
6301 876 Box
6359 947 Box
6417 1051 Box
6476 1154 Box
6534 1297 Box
6593 1566 Box
6651 1955 Box
6709 2637 Box
6768 3931 Box
6829 3547 Box
1.000 UL
LTb
990 660 M
5836 0 V
0 3720 V
-5836 0 V
990 660 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
