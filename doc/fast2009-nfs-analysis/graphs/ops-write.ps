%!PS-Adobe-2.0 EPSF-2.0
%%Title: psplot-6352..ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon Jan  5 13:28:12 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -73 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
1.000 UL
LTb
1254 660 M
63 0 V
5509 0 R
-63 0 V
stroke
1122 660 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1254 1404 M
63 0 V
5509 0 R
-63 0 V
stroke
1122 1404 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 500)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1254 2148 M
63 0 V
5509 0 R
-63 0 V
stroke
1122 2148 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 1000)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1254 2892 M
63 0 V
5509 0 R
-63 0 V
stroke
1122 2892 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 1500)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1254 3636 M
63 0 V
5509 0 R
-63 0 V
stroke
1122 3636 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 2000)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1254 4380 M
63 0 V
5509 0 R
-63 0 V
stroke
1122 4380 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 2500)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1254 660 M
0 63 V
0 3657 R
0 -63 V
stroke
1254 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MCshow
grestore
1.000 UL
LTb
1811 660 M
0 63 V
0 3657 R
0 -63 V
stroke
1811 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.1)]
] -73.3 MCshow
grestore
1.000 UL
LTb
2368 660 M
0 63 V
0 3657 R
0 -63 V
stroke
2368 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.2)]
] -73.3 MCshow
grestore
1.000 UL
LTb
2926 660 M
0 63 V
0 3657 R
0 -63 V
stroke
2926 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.3)]
] -73.3 MCshow
grestore
1.000 UL
LTb
3483 660 M
0 63 V
0 3657 R
0 -63 V
stroke
3483 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.4)]
] -73.3 MCshow
grestore
1.000 UL
LTb
4040 660 M
0 63 V
0 3657 R
0 -63 V
stroke
4040 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.5)]
] -73.3 MCshow
grestore
1.000 UL
LTb
4597 660 M
0 63 V
0 3657 R
0 -63 V
stroke
4597 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.6)]
] -73.3 MCshow
grestore
1.000 UL
LTb
5154 660 M
0 63 V
0 3657 R
0 -63 V
stroke
5154 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.7)]
] -73.3 MCshow
grestore
1.000 UL
LTb
5712 660 M
0 63 V
0 3657 R
0 -63 V
stroke
5712 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.8)]
] -73.3 MCshow
grestore
1.000 UL
LTb
6269 660 M
0 63 V
0 3657 R
0 -63 V
stroke
6269 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.9)]
] -73.3 MCshow
grestore
1.000 UL
LTb
6826 660 M
0 63 V
0 3657 R
0 -63 V
stroke
6826 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 1)]
] -73.3 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1254 660 M
5572 0 V
0 3720 V
-5572 0 V
0 -3720 V
LTb
220 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Operations/s)]
] -73.3 MCshow
grestore
grestore
LTb
4040 110 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (Quantile)]
] -73.3 MCshow
grestore
LTb
4040 4710 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (write/second)]
] -73.3 MCshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
6666 4207 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (anim-2003/set-5, 1s interval,  write op)]
] -73.3 MRshow
grestore
LT0
6798 4207 M
591 0 V
1254 660 M
56 0 V
55 0 V
56 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
56 0 V
55 0 V
56 1 V
56 2 V
55 1 V
56 2 V
56 4 V
56 5 V
55 7 V
56 6 V
56 8 V
55 10 V
56 9 V
56 9 V
56 4 V
55 2 V
56 4 V
56 6 V
56 9 V
55 6 V
56 9 V
56 8 V
55 6 V
56 8 V
56 8 V
56 4 V
55 4 V
56 7 V
56 6 V
55 6 V
56 6 V
56 6 V
56 6 V
55 6 V
56 5 V
56 6 V
55 8 V
56 3 V
56 6 V
56 6 V
55 6 V
56 6 V
56 7 V
56 6 V
55 7 V
56 6 V
56 8 V
55 7 V
56 6 V
56 8 V
56 9 V
55 9 V
56 8 V
56 11 V
55 9 V
56 10 V
56 12 V
56 14 V
55 13 V
56 15 V
56 18 V
55 18 V
56 20 V
56 24 V
56 27 V
55 34 V
56 49 V
56 52 V
56 53 V
55 58 V
56 57 V
56 63 V
55 88 V
56 169 V
56 453 V
56 473 V
55 436 V
1254 660 Pls
1310 660 Pls
1365 660 Pls
1421 660 Pls
1477 660 Pls
1533 660 Pls
1588 660 Pls
1644 660 Pls
1700 660 Pls
1755 660 Pls
1811 660 Pls
1867 660 Pls
1923 660 Pls
1978 660 Pls
2034 660 Pls
2090 660 Pls
2146 660 Pls
2201 660 Pls
2257 660 Pls
2313 660 Pls
2368 660 Pls
2424 660 Pls
2480 660 Pls
2536 660 Pls
2591 660 Pls
2647 661 Pls
2703 663 Pls
2758 664 Pls
2814 666 Pls
2870 670 Pls
2926 675 Pls
2981 682 Pls
3037 688 Pls
3093 696 Pls
3148 706 Pls
3204 715 Pls
3260 724 Pls
3316 728 Pls
3371 730 Pls
3427 734 Pls
3483 740 Pls
3539 749 Pls
3594 755 Pls
3650 764 Pls
3706 772 Pls
3761 778 Pls
3817 786 Pls
3873 794 Pls
3929 798 Pls
3984 802 Pls
4040 809 Pls
4096 815 Pls
4151 821 Pls
4207 827 Pls
4263 833 Pls
4319 839 Pls
4374 845 Pls
4430 850 Pls
4486 856 Pls
4541 864 Pls
4597 867 Pls
4653 873 Pls
4709 879 Pls
4764 885 Pls
4820 891 Pls
4876 898 Pls
4932 904 Pls
4987 911 Pls
5043 917 Pls
5099 925 Pls
5154 932 Pls
5210 938 Pls
5266 946 Pls
5322 955 Pls
5377 964 Pls
5433 972 Pls
5489 983 Pls
5544 992 Pls
5600 1002 Pls
5656 1014 Pls
5712 1028 Pls
5767 1041 Pls
5823 1056 Pls
5879 1074 Pls
5934 1092 Pls
5990 1112 Pls
6046 1136 Pls
6102 1163 Pls
6157 1197 Pls
6213 1246 Pls
6269 1298 Pls
6325 1351 Pls
6380 1409 Pls
6436 1466 Pls
6492 1529 Pls
6547 1617 Pls
6603 1786 Pls
6659 2239 Pls
6715 2712 Pls
6770 3148 Pls
7093 4207 Pls
1.000 UP
1.000 UL
LT1
LTb
6666 3987 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (anim-2003/set-12, 1s interval,  write op)]
] -73.3 MRshow
grestore
LT1
6798 3987 M
591 0 V
1254 660 M
56 3 V
55 3 V
56 3 V
56 2 V
56 2 V
55 3 V
56 2 V
56 3 V
55 1 V
56 2 V
56 3 V
56 1 V
55 3 V
56 2 V
56 1 V
56 3 V
55 2 V
56 3 V
56 3 V
55 3 V
56 4 V
56 3 V
56 6 V
55 4 V
56 6 V
56 5 V
55 7 V
56 6 V
56 8 V
56 6 V
55 7 V
56 8 V
56 6 V
55 4 V
56 5 V
56 5 V
56 5 V
55 4 V
56 5 V
56 6 V
56 4 V
55 5 V
56 4 V
56 6 V
55 6 V
56 6 V
56 7 V
56 8 V
55 7 V
56 8 V
56 9 V
55 9 V
56 10 V
56 10 V
56 11 V
55 12 V
56 13 V
56 12 V
55 15 V
56 16 V
56 15 V
56 17 V
55 19 V
56 18 V
56 21 V
56 20 V
55 21 V
56 23 V
56 23 V
55 23 V
56 21 V
56 26 V
56 24 V
55 22 V
56 23 V
56 30 V
55 23 V
56 30 V
56 28 V
56 32 V
55 32 V
56 36 V
56 39 V
55 46 V
56 44 V
56 47 V
56 49 V
55 59 V
56 60 V
56 64 V
56 67 V
55 67 V
56 84 V
56 83 V
55 95 V
56 125 V
56 171 V
56 232 V
55 387 V
1254 660 Crs
1310 663 Crs
1365 666 Crs
1421 669 Crs
1477 671 Crs
1533 673 Crs
1588 676 Crs
1644 678 Crs
1700 681 Crs
1755 682 Crs
1811 684 Crs
1867 687 Crs
1923 688 Crs
1978 691 Crs
2034 693 Crs
2090 694 Crs
2146 697 Crs
2201 699 Crs
2257 702 Crs
2313 705 Crs
2368 708 Crs
2424 712 Crs
2480 715 Crs
2536 721 Crs
2591 725 Crs
2647 731 Crs
2703 736 Crs
2758 743 Crs
2814 749 Crs
2870 757 Crs
2926 763 Crs
2981 770 Crs
3037 778 Crs
3093 784 Crs
3148 788 Crs
3204 793 Crs
3260 798 Crs
3316 803 Crs
3371 807 Crs
3427 812 Crs
3483 818 Crs
3539 822 Crs
3594 827 Crs
3650 831 Crs
3706 837 Crs
3761 843 Crs
3817 849 Crs
3873 856 Crs
3929 864 Crs
3984 871 Crs
4040 879 Crs
4096 888 Crs
4151 897 Crs
4207 907 Crs
4263 917 Crs
4319 928 Crs
4374 940 Crs
4430 953 Crs
4486 965 Crs
4541 980 Crs
4597 996 Crs
4653 1011 Crs
4709 1028 Crs
4764 1047 Crs
4820 1065 Crs
4876 1086 Crs
4932 1106 Crs
4987 1127 Crs
5043 1150 Crs
5099 1173 Crs
5154 1196 Crs
5210 1217 Crs
5266 1243 Crs
5322 1267 Crs
5377 1289 Crs
5433 1312 Crs
5489 1342 Crs
5544 1365 Crs
5600 1395 Crs
5656 1423 Crs
5712 1455 Crs
5767 1487 Crs
5823 1523 Crs
5879 1562 Crs
5934 1608 Crs
5990 1652 Crs
6046 1699 Crs
6102 1748 Crs
6157 1807 Crs
6213 1867 Crs
6269 1931 Crs
6325 1998 Crs
6380 2065 Crs
6436 2149 Crs
6492 2232 Crs
6547 2327 Crs
6603 2452 Crs
6659 2623 Crs
6715 2855 Crs
6770 3242 Crs
7093 3987 Crs
1.000 UP
1.000 UL
LT2
LTb
6666 3767 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (anim-2007/set-2, 1s interval,  write op)]
] -73.3 MRshow
grestore
LT2
6798 3767 M
591 0 V
1254 660 M
56 0 V
55 0 V
56 1 V
56 0 V
56 0 V
55 2 V
56 0 V
56 0 V
55 0 V
56 1 V
56 0 V
56 0 V
55 0 V
56 0 V
56 2 V
56 0 V
55 0 V
56 0 V
56 0 V
55 1 V
56 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 2 V
55 0 V
56 0 V
56 0 V
56 0 V
55 1 V
56 0 V
56 0 V
55 0 V
56 0 V
56 2 V
56 0 V
55 0 V
56 0 V
56 1 V
56 0 V
55 0 V
56 0 V
56 2 V
55 0 V
56 0 V
56 1 V
56 0 V
55 0 V
56 1 V
56 1 V
55 0 V
56 1 V
56 0 V
56 2 V
55 0 V
56 1 V
56 0 V
55 2 V
56 1 V
56 2 V
56 1 V
55 1 V
56 2 V
56 2 V
56 1 V
55 2 V
56 1 V
56 3 V
55 2 V
56 1 V
56 3 V
56 2 V
55 3 V
56 3 V
56 3 V
55 4 V
56 3 V
56 4 V
56 5 V
55 4 V
56 6 V
56 5 V
55 7 V
56 8 V
56 7 V
56 9 V
55 10 V
56 12 V
56 15 V
56 18 V
55 23 V
56 28 V
56 40 V
55 62 V
56 119 V
56 225 V
56 497 V
55 564 V
1254 660 Star
1310 660 Star
1365 660 Star
1421 661 Star
1477 661 Star
1533 661 Star
1588 663 Star
1644 663 Star
1700 663 Star
1755 663 Star
1811 664 Star
1867 664 Star
1923 664 Star
1978 664 Star
2034 664 Star
2090 666 Star
2146 666 Star
2201 666 Star
2257 666 Star
2313 666 Star
2368 667 Star
2424 667 Star
2480 667 Star
2536 667 Star
2591 667 Star
2647 667 Star
2703 669 Star
2758 669 Star
2814 669 Star
2870 669 Star
2926 669 Star
2981 670 Star
3037 670 Star
3093 670 Star
3148 670 Star
3204 670 Star
3260 672 Star
3316 672 Star
3371 672 Star
3427 672 Star
3483 673 Star
3539 673 Star
3594 673 Star
3650 673 Star
3706 675 Star
3761 675 Star
3817 675 Star
3873 676 Star
3929 676 Star
3984 676 Star
4040 677 Star
4096 678 Star
4151 678 Star
4207 679 Star
4263 679 Star
4319 681 Star
4374 681 Star
4430 682 Star
4486 682 Star
4541 684 Star
4597 685 Star
4653 687 Star
4709 688 Star
4764 689 Star
4820 691 Star
4876 693 Star
4932 694 Star
4987 696 Star
5043 697 Star
5099 700 Star
5154 702 Star
5210 703 Star
5266 706 Star
5322 708 Star
5377 711 Star
5433 714 Star
5489 717 Star
5544 721 Star
5600 724 Star
5656 728 Star
5712 733 Star
5767 737 Star
5823 743 Star
5879 748 Star
5934 755 Star
5990 763 Star
6046 770 Star
6102 779 Star
6157 789 Star
6213 801 Star
6269 816 Star
6325 834 Star
6380 857 Star
6436 885 Star
6492 925 Star
6547 987 Star
6603 1106 Star
6659 1331 Star
6715 1828 Star
6770 2392 Star
7093 3767 Star
1.000 UP
1.000 UL
LT3
LTb
6666 3547 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (anim-2007/set-5, 1s interval,  write op)]
] -73.3 MRshow
grestore
LT3
6798 3547 M
591 0 V
1254 660 M
56 0 V
55 0 V
56 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
56 0 V
55 3 V
56 0 V
56 0 V
55 0 V
56 0 V
56 3 V
56 0 V
55 0 V
56 1 V
56 2 V
56 0 V
55 3 V
56 0 V
56 3 V
55 2 V
56 2 V
56 2 V
56 3 V
55 3 V
56 4 V
56 3 V
55 4 V
56 4 V
56 6 V
56 6 V
55 8 V
56 8 V
56 10 V
55 12 V
56 15 V
56 17 V
56 19 V
55 27 V
56 34 V
56 46 V
56 59 V
55 84 V
56 85 V
56 108 V
55 153 V
56 231 V
56 392 V
56 682 V
55 1280 V
1254 660 Box
1310 660 Box
1365 660 Box
1421 660 Box
1477 660 Box
1533 660 Box
1588 660 Box
1644 660 Box
1700 660 Box
1755 660 Box
1811 660 Box
1867 660 Box
1923 660 Box
1978 660 Box
2034 660 Box
2090 660 Box
2146 660 Box
2201 660 Box
2257 660 Box
2313 660 Box
2368 660 Box
2424 660 Box
2480 660 Box
2536 660 Box
2591 660 Box
2647 660 Box
2703 660 Box
2758 660 Box
2814 660 Box
2870 660 Box
2926 660 Box
2981 660 Box
3037 660 Box
3093 660 Box
3148 660 Box
3204 660 Box
3260 660 Box
3316 660 Box
3371 660 Box
3427 660 Box
3483 660 Box
3539 660 Box
3594 660 Box
3650 660 Box
3706 660 Box
3761 660 Box
3817 660 Box
3873 660 Box
3929 660 Box
3984 660 Box
4040 660 Box
4096 660 Box
4151 660 Box
4207 660 Box
4263 660 Box
4319 660 Box
4374 663 Box
4430 663 Box
4486 663 Box
4541 663 Box
4597 663 Box
4653 666 Box
4709 666 Box
4764 666 Box
4820 667 Box
4876 669 Box
4932 669 Box
4987 672 Box
5043 672 Box
5099 675 Box
5154 677 Box
5210 679 Box
5266 681 Box
5322 684 Box
5377 687 Box
5433 691 Box
5489 694 Box
5544 698 Box
5600 702 Box
5656 708 Box
5712 714 Box
5767 722 Box
5823 730 Box
5879 740 Box
5934 752 Box
5990 767 Box
6046 784 Box
6102 803 Box
6157 830 Box
6213 864 Box
6269 910 Box
6325 969 Box
6380 1053 Box
6436 1138 Box
6492 1246 Box
6547 1399 Box
6603 1630 Box
6659 2022 Box
6715 2704 Box
6770 3984 Box
7093 3547 Box
1.000 UL
LTb
1254 660 M
5572 0 V
0 3720 V
-5572 0 V
0 -3720 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
