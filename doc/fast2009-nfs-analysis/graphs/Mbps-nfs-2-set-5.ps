%!PS-Adobe-2.0 EPSF-2.0
%%Title: psplot-9253..ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Dec 11 13:03:50 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
798 420 M
63 0 V
6101 0 R
-63 0 V
stroke
714 420 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
grestore
1.000 UL
LTb
798 887 M
63 0 V
6101 0 R
-63 0 V
stroke
714 887 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 500)]
] -46.7 MRshow
grestore
1.000 UL
LTb
798 1353 M
63 0 V
6101 0 R
-63 0 V
stroke
714 1353 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 1000)]
] -46.7 MRshow
grestore
1.000 UL
LTb
798 1820 M
63 0 V
6101 0 R
-63 0 V
stroke
714 1820 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 1500)]
] -46.7 MRshow
grestore
1.000 UL
LTb
798 2287 M
63 0 V
6101 0 R
-63 0 V
stroke
714 2287 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 2000)]
] -46.7 MRshow
grestore
1.000 UL
LTb
798 2753 M
63 0 V
6101 0 R
-63 0 V
stroke
714 2753 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 2500)]
] -46.7 MRshow
grestore
1.000 UL
LTb
798 3220 M
63 0 V
6101 0 R
-63 0 V
stroke
714 3220 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 3000)]
] -46.7 MRshow
grestore
1.000 UL
LTb
798 3687 M
63 0 V
6101 0 R
-63 0 V
stroke
714 3687 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 3500)]
] -46.7 MRshow
grestore
1.000 UL
LTb
798 4153 M
63 0 V
6101 0 R
-63 0 V
stroke
714 4153 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 4000)]
] -46.7 MRshow
grestore
1.000 UL
LTb
798 4620 M
63 0 V
6101 0 R
-63 0 V
stroke
714 4620 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 4500)]
] -46.7 MRshow
grestore
1.000 UL
LTb
798 420 M
0 63 V
0 4137 R
0 -63 V
stroke
798 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
grestore
1.000 UL
LTb
1414 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1414 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MCshow
grestore
1.000 UL
LTb
2031 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2031 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MCshow
grestore
1.000 UL
LTb
2647 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2647 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.3)]
] -46.7 MCshow
grestore
1.000 UL
LTb
3264 420 M
0 63 V
0 4137 R
0 -63 V
stroke
3264 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MCshow
grestore
1.000 UL
LTb
3880 420 M
0 63 V
0 4137 R
0 -63 V
stroke
3880 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MCshow
grestore
1.000 UL
LTb
4496 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4496 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MCshow
grestore
1.000 UL
LTb
5113 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5113 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.7)]
] -46.7 MCshow
grestore
1.000 UL
LTb
5729 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5729 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MCshow
grestore
1.000 UL
LTb
6346 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6346 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.9)]
] -46.7 MCshow
grestore
1.000 UL
LTb
6962 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6962 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
798 420 M
6164 0 V
0 4200 V
-6164 0 V
798 420 L
LTb
140 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Mbps)]
] -46.7 MCshow
grestore
grestore
LTb
3880 70 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (Quantile)]
] -46.7 MCshow
grestore
LTb
3880 4830 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (anim-2007/set-5 at different intervals)]
] -46.7 MCshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
2058 4487 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (1 ms intervals)]
] -46.7 MRshow
grestore
LT0
2142 4487 M
399 0 V
860 420 M
61 0 V
62 0 V
62 0 V
61 0 V
62 0 V
61 0 V
62 0 V
62 0 V
61 0 V
62 0 V
62 0 V
61 0 V
62 0 V
62 0 V
61 0 V
62 0 V
62 0 V
61 0 V
62 0 V
61 0 V
62 0 V
62 0 V
61 1 V
62 2 V
62 3 V
61 3 V
62 2 V
62 2 V
61 3 V
62 3 V
61 4 V
62 4 V
62 4 V
61 4 V
62 4 V
62 5 V
61 4 V
62 5 V
62 5 V
61 5 V
62 4 V
62 6 V
61 5 V
62 6 V
61 5 V
62 6 V
62 6 V
61 6 V
62 7 V
62 7 V
61 7 V
62 8 V
62 8 V
61 9 V
62 10 V
61 11 V
62 12 V
62 14 V
61 18 V
62 20 V
62 25 V
61 27 V
62 30 V
62 33 V
61 39 V
62 45 V
62 51 V
61 58 V
62 63 V
61 68 V
62 71 V
62 80 V
61 80 V
62 51 V
62 20 V
61 21 V
62 25 V
62 27 V
61 35 V
62 48 V
61 59 V
62 69 V
62 73 V
61 79 V
62 83 V
62 77 V
61 81 V
62 89 V
62 89 V
61 84 V
62 85 V
62 138 V
61 174 V
62 187 V
61 217 V
62 270 V
62 363 V
61 583 V
860 420 Pls
921 420 Pls
983 420 Pls
1045 420 Pls
1106 420 Pls
1168 420 Pls
1229 420 Pls
1291 420 Pls
1353 420 Pls
1414 420 Pls
1476 420 Pls
1538 420 Pls
1599 420 Pls
1661 420 Pls
1723 420 Pls
1784 420 Pls
1846 420 Pls
1908 420 Pls
1969 420 Pls
2031 420 Pls
2092 420 Pls
2154 420 Pls
2216 420 Pls
2277 421 Pls
2339 423 Pls
2401 426 Pls
2462 429 Pls
2524 431 Pls
2586 433 Pls
2647 436 Pls
2709 439 Pls
2770 443 Pls
2832 447 Pls
2894 451 Pls
2955 455 Pls
3017 459 Pls
3079 464 Pls
3140 468 Pls
3202 473 Pls
3264 478 Pls
3325 483 Pls
3387 487 Pls
3449 493 Pls
3510 498 Pls
3572 504 Pls
3633 509 Pls
3695 515 Pls
3757 521 Pls
3818 527 Pls
3880 534 Pls
3942 541 Pls
4003 548 Pls
4065 556 Pls
4127 564 Pls
4188 573 Pls
4250 583 Pls
4311 594 Pls
4373 606 Pls
4435 620 Pls
4496 638 Pls
4558 658 Pls
4620 683 Pls
4681 710 Pls
4743 740 Pls
4805 773 Pls
4866 812 Pls
4928 857 Pls
4990 908 Pls
5051 966 Pls
5113 1029 Pls
5174 1097 Pls
5236 1168 Pls
5298 1248 Pls
5359 1328 Pls
5421 1379 Pls
5483 1399 Pls
5544 1420 Pls
5606 1445 Pls
5668 1472 Pls
5729 1507 Pls
5791 1555 Pls
5852 1614 Pls
5914 1683 Pls
5976 1756 Pls
6037 1835 Pls
6099 1918 Pls
6161 1995 Pls
6222 2076 Pls
6284 2165 Pls
6346 2254 Pls
6407 2338 Pls
6469 2423 Pls
6531 2561 Pls
6592 2735 Pls
6654 2922 Pls
6715 3139 Pls
6777 3409 Pls
6839 3772 Pls
6900 4355 Pls
2341 4487 Pls
1.000 UP
1.000 UL
LT1
LTb
2058 4347 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (1 s intervals)]
] -46.7 MRshow
grestore
LT1
2142 4347 M
399 0 V
860 420 M
61 0 V
62 0 V
62 0 V
61 0 V
62 0 V
61 0 V
62 0 V
62 0 V
61 0 V
62 0 V
62 0 V
61 0 V
62 0 V
62 0 V
61 0 V
62 0 V
62 0 V
61 1 V
62 0 V
61 2 V
62 2 V
62 3 V
61 6 V
62 7 V
62 11 V
61 13 V
62 14 V
62 14 V
61 13 V
62 12 V
61 11 V
62 11 V
62 10 V
61 10 V
62 10 V
62 10 V
61 9 V
62 9 V
62 11 V
61 9 V
62 10 V
62 11 V
61 10 V
62 12 V
61 10 V
62 12 V
62 11 V
61 12 V
62 13 V
62 11 V
61 14 V
62 13 V
62 13 V
61 14 V
62 14 V
61 16 V
62 15 V
62 16 V
61 17 V
62 17 V
62 16 V
61 20 V
62 18 V
62 20 V
61 22 V
62 20 V
62 23 V
61 24 V
62 24 V
61 26 V
62 27 V
62 28 V
61 30 V
62 31 V
62 35 V
61 35 V
62 36 V
62 41 V
61 41 V
62 39 V
61 46 V
62 45 V
62 51 V
61 54 V
62 56 V
62 69 V
61 69 V
62 74 V
62 87 V
61 94 V
62 96 V
62 118 V
61 130 V
62 158 V
61 197 V
62 231 V
62 325 V
61 546 V
860 420 Box
921 420 Box
983 420 Box
1045 420 Box
1106 420 Box
1168 420 Box
1229 420 Box
1291 420 Box
1353 420 Box
1414 420 Box
1476 420 Box
1538 420 Box
1599 420 Box
1661 420 Box
1723 420 Box
1784 420 Box
1846 420 Box
1908 420 Box
1969 421 Box
2031 421 Box
2092 423 Box
2154 425 Box
2216 428 Box
2277 434 Box
2339 441 Box
2401 452 Box
2462 465 Box
2524 479 Box
2586 493 Box
2647 506 Box
2709 518 Box
2770 529 Box
2832 540 Box
2894 550 Box
2955 560 Box
3017 570 Box
3079 580 Box
3140 589 Box
3202 598 Box
3264 609 Box
3325 618 Box
3387 628 Box
3449 639 Box
3510 649 Box
3572 661 Box
3633 671 Box
3695 683 Box
3757 694 Box
3818 706 Box
3880 719 Box
3942 730 Box
4003 744 Box
4065 757 Box
4127 770 Box
4188 784 Box
4250 798 Box
4311 814 Box
4373 829 Box
4435 845 Box
4496 862 Box
4558 879 Box
4620 895 Box
4681 915 Box
4743 933 Box
4805 953 Box
4866 975 Box
4928 995 Box
4990 1018 Box
5051 1042 Box
5113 1066 Box
5174 1092 Box
5236 1119 Box
5298 1147 Box
5359 1177 Box
5421 1208 Box
5483 1243 Box
5544 1278 Box
5606 1314 Box
5668 1355 Box
5729 1396 Box
5791 1435 Box
5852 1481 Box
5914 1526 Box
5976 1577 Box
6037 1631 Box
6099 1687 Box
6161 1756 Box
6222 1825 Box
6284 1899 Box
6346 1986 Box
6407 2080 Box
6469 2176 Box
6531 2294 Box
6592 2424 Box
6654 2582 Box
6715 2779 Box
6777 3010 Box
6839 3335 Box
6900 3881 Box
2341 4347 Box
1.000 UP
1.000 UL
LT2
LTb
2058 4207 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (60 s intervals)]
] -46.7 MRshow
grestore
LT2
2142 4207 M
399 0 V
860 420 M
61 0 V
62 0 V
62 0 V
61 0 V
62 0 V
61 0 V
62 0 V
62 0 V
61 0 V
62 0 V
62 0 V
61 0 V
62 0 V
62 1 V
61 0 V
62 1 V
62 1 V
61 2 V
62 3 V
61 5 V
62 6 V
62 9 V
61 12 V
62 12 V
62 13 V
61 16 V
62 18 V
62 26 V
61 22 V
62 20 V
61 16 V
62 15 V
62 16 V
61 14 V
62 13 V
62 13 V
61 11 V
62 14 V
62 11 V
61 11 V
62 12 V
62 11 V
61 11 V
62 10 V
61 11 V
62 10 V
62 10 V
61 11 V
62 11 V
62 12 V
61 11 V
62 11 V
62 10 V
61 12 V
62 12 V
61 12 V
62 11 V
62 13 V
61 14 V
62 13 V
62 13 V
61 15 V
62 15 V
62 17 V
61 16 V
62 16 V
62 16 V
61 18 V
62 18 V
61 20 V
62 20 V
62 20 V
61 20 V
62 24 V
62 24 V
61 29 V
62 27 V
62 34 V
61 29 V
62 35 V
61 34 V
62 40 V
62 40 V
61 42 V
62 51 V
62 54 V
61 62 V
62 69 V
62 77 V
61 81 V
62 93 V
62 94 V
61 113 V
62 114 V
61 150 V
62 212 V
62 310 V
61 552 V
860 420 TriU
921 420 TriU
983 420 TriU
1045 420 TriU
1106 420 TriU
1168 420 TriU
1229 420 TriU
1291 420 TriU
1353 420 TriU
1414 420 TriU
1476 420 TriU
1538 420 TriU
1599 420 TriU
1661 420 TriU
1723 421 TriU
1784 421 TriU
1846 422 TriU
1908 423 TriU
1969 425 TriU
2031 428 TriU
2092 433 TriU
2154 439 TriU
2216 448 TriU
2277 460 TriU
2339 472 TriU
2401 485 TriU
2462 501 TriU
2524 519 TriU
2586 545 TriU
2647 567 TriU
2709 587 TriU
2770 603 TriU
2832 618 TriU
2894 634 TriU
2955 648 TriU
3017 661 TriU
3079 674 TriU
3140 685 TriU
3202 699 TriU
3264 710 TriU
3325 721 TriU
3387 733 TriU
3449 744 TriU
3510 755 TriU
3572 765 TriU
3633 776 TriU
3695 786 TriU
3757 796 TriU
3818 807 TriU
3880 818 TriU
3942 830 TriU
4003 841 TriU
4065 852 TriU
4127 862 TriU
4188 874 TriU
4250 886 TriU
4311 898 TriU
4373 909 TriU
4435 922 TriU
4496 936 TriU
4558 949 TriU
4620 962 TriU
4681 977 TriU
4743 992 TriU
4805 1009 TriU
4866 1025 TriU
4928 1041 TriU
4990 1057 TriU
5051 1075 TriU
5113 1093 TriU
5174 1113 TriU
5236 1133 TriU
5298 1153 TriU
5359 1173 TriU
5421 1197 TriU
5483 1221 TriU
5544 1250 TriU
5606 1277 TriU
5668 1311 TriU
5729 1340 TriU
5791 1375 TriU
5852 1409 TriU
5914 1449 TriU
5976 1489 TriU
6037 1531 TriU
6099 1582 TriU
6161 1636 TriU
6222 1698 TriU
6284 1767 TriU
6346 1844 TriU
6407 1925 TriU
6469 2018 TriU
6531 2112 TriU
6592 2225 TriU
6654 2339 TriU
6715 2489 TriU
6777 2701 TriU
6839 3011 TriU
6900 3563 TriU
2341 4207 TriU
1.000 UL
LTb
798 420 M
6164 0 V
0 4200 V
-6164 0 V
798 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
