%!PS-Adobe-2.0 EPSF-2.0
%%Title: psplot-6352..ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon Jan  5 13:11:47 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -73 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
1.000 UL
LTb
1254 660 M
63 0 V
5509 0 R
-63 0 V
stroke
1122 660 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1254 1073 M
63 0 V
5509 0 R
-63 0 V
stroke
1122 1073 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 500)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1254 1487 M
63 0 V
5509 0 R
-63 0 V
stroke
1122 1487 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 1000)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1254 1900 M
63 0 V
5509 0 R
-63 0 V
stroke
1122 1900 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 1500)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1254 2313 M
63 0 V
5509 0 R
-63 0 V
stroke
1122 2313 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 2000)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1254 2727 M
63 0 V
5509 0 R
-63 0 V
stroke
1122 2727 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 2500)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1254 3140 M
63 0 V
5509 0 R
-63 0 V
stroke
1122 3140 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 3000)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1254 3553 M
63 0 V
5509 0 R
-63 0 V
stroke
1122 3553 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 3500)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1254 3967 M
63 0 V
5509 0 R
-63 0 V
stroke
1122 3967 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 4000)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1254 4380 M
63 0 V
5509 0 R
-63 0 V
stroke
1122 4380 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 4500)]
] -73.3 MRshow
grestore
1.000 UL
LTb
1254 660 M
0 63 V
0 3657 R
0 -63 V
stroke
1254 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MCshow
grestore
1.000 UL
LTb
1811 660 M
0 63 V
0 3657 R
0 -63 V
stroke
1811 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.1)]
] -73.3 MCshow
grestore
1.000 UL
LTb
2368 660 M
0 63 V
0 3657 R
0 -63 V
stroke
2368 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.2)]
] -73.3 MCshow
grestore
1.000 UL
LTb
2926 660 M
0 63 V
0 3657 R
0 -63 V
stroke
2926 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.3)]
] -73.3 MCshow
grestore
1.000 UL
LTb
3483 660 M
0 63 V
0 3657 R
0 -63 V
stroke
3483 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.4)]
] -73.3 MCshow
grestore
1.000 UL
LTb
4040 660 M
0 63 V
0 3657 R
0 -63 V
stroke
4040 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.5)]
] -73.3 MCshow
grestore
1.000 UL
LTb
4597 660 M
0 63 V
0 3657 R
0 -63 V
stroke
4597 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.6)]
] -73.3 MCshow
grestore
1.000 UL
LTb
5154 660 M
0 63 V
0 3657 R
0 -63 V
stroke
5154 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.7)]
] -73.3 MCshow
grestore
1.000 UL
LTb
5712 660 M
0 63 V
0 3657 R
0 -63 V
stroke
5712 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.8)]
] -73.3 MCshow
grestore
1.000 UL
LTb
6269 660 M
0 63 V
0 3657 R
0 -63 V
stroke
6269 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.9)]
] -73.3 MCshow
grestore
1.000 UL
LTb
6826 660 M
0 63 V
0 3657 R
0 -63 V
stroke
6826 440 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 ( 1)]
] -73.3 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1254 660 M
5572 0 V
0 3720 V
-5572 0 V
0 -3720 V
LTb
220 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Mbps)]
] -73.3 MCshow
grestore
grestore
LTb
4040 110 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (Quantile)]
] -73.3 MCshow
grestore
LTb
4040 4710 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (anim-2007/set-5 at different intervals)]
] -73.3 MCshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
3234 4207 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (1 ms intervals)]
] -73.3 MRshow
grestore
LT0
3366 4207 M
591 0 V
1310 660 M
55 0 V
56 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
56 0 V
55 0 V
56 3 V
56 3 V
55 2 V
56 2 V
56 2 V
56 2 V
55 3 V
56 3 V
56 4 V
55 3 V
56 4 V
56 4 V
56 4 V
55 4 V
56 4 V
56 4 V
56 4 V
55 5 V
56 4 V
56 5 V
55 5 V
56 5 V
56 5 V
56 6 V
55 5 V
56 6 V
56 6 V
55 6 V
56 7 V
56 8 V
56 8 V
55 8 V
56 10 V
56 11 V
55 12 V
56 16 V
56 18 V
56 22 V
55 24 V
56 26 V
56 30 V
56 35 V
55 39 V
56 45 V
56 51 V
55 56 V
56 60 V
56 63 V
56 71 V
55 71 V
56 45 V
56 18 V
55 19 V
56 22 V
56 24 V
56 31 V
55 42 V
56 53 V
56 60 V
55 65 V
56 70 V
56 73 V
56 69 V
55 72 V
56 79 V
56 78 V
56 75 V
55 75 V
56 122 V
56 154 V
55 166 V
56 192 V
56 240 V
56 321 V
55 516 V
1310 660 Pls
1365 660 Pls
1421 660 Pls
1477 660 Pls
1533 660 Pls
1588 660 Pls
1644 660 Pls
1700 660 Pls
1755 660 Pls
1811 660 Pls
1867 660 Pls
1923 660 Pls
1978 660 Pls
2034 660 Pls
2090 660 Pls
2146 660 Pls
2201 660 Pls
2257 660 Pls
2313 660 Pls
2368 660 Pls
2424 660 Pls
2480 660 Pls
2536 660 Pls
2591 660 Pls
2647 663 Pls
2703 666 Pls
2758 668 Pls
2814 670 Pls
2870 672 Pls
2926 674 Pls
2981 677 Pls
3037 680 Pls
3093 684 Pls
3148 687 Pls
3204 691 Pls
3260 695 Pls
3316 699 Pls
3371 703 Pls
3427 707 Pls
3483 711 Pls
3539 715 Pls
3594 720 Pls
3650 724 Pls
3706 729 Pls
3761 734 Pls
3817 739 Pls
3873 744 Pls
3929 750 Pls
3984 755 Pls
4040 761 Pls
4096 767 Pls
4151 773 Pls
4207 780 Pls
4263 788 Pls
4319 796 Pls
4374 804 Pls
4430 814 Pls
4486 825 Pls
4541 837 Pls
4597 853 Pls
4653 871 Pls
4709 893 Pls
4764 917 Pls
4820 943 Pls
4876 973 Pls
4932 1008 Pls
4987 1047 Pls
5043 1092 Pls
5099 1143 Pls
5154 1199 Pls
5210 1259 Pls
5266 1322 Pls
5322 1393 Pls
5377 1464 Pls
5433 1509 Pls
5489 1527 Pls
5544 1546 Pls
5600 1568 Pls
5656 1592 Pls
5712 1623 Pls
5767 1665 Pls
5823 1718 Pls
5879 1778 Pls
5934 1843 Pls
5990 1913 Pls
6046 1986 Pls
6102 2055 Pls
6157 2127 Pls
6213 2206 Pls
6269 2284 Pls
6325 2359 Pls
6380 2434 Pls
6436 2556 Pls
6492 2710 Pls
6547 2876 Pls
6603 3068 Pls
6659 3308 Pls
6715 3629 Pls
6770 4145 Pls
3661 4207 Pls
1.000 UP
1.000 UL
LT1
LTb
3234 3987 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (1 s intervals)]
] -73.3 MRshow
grestore
LT1
3366 3987 M
591 0 V
1310 660 M
55 0 V
56 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 1 V
55 0 V
56 1 V
56 3 V
56 3 V
55 4 V
56 7 V
56 9 V
55 12 V
56 13 V
56 11 V
56 12 V
55 10 V
56 11 V
56 9 V
55 9 V
56 9 V
56 9 V
56 8 V
55 9 V
56 8 V
56 9 V
56 9 V
55 9 V
56 9 V
56 9 V
55 10 V
56 10 V
56 10 V
56 10 V
55 10 V
56 12 V
56 10 V
55 12 V
56 11 V
56 12 V
56 12 V
55 13 V
56 14 V
56 13 V
55 14 V
56 15 V
56 15 V
56 15 V
55 17 V
56 17 V
56 17 V
56 19 V
55 18 V
56 20 V
56 22 V
55 21 V
56 23 V
56 24 V
56 25 V
55 27 V
56 27 V
56 31 V
55 31 V
56 32 V
56 36 V
56 37 V
55 34 V
56 41 V
56 40 V
55 45 V
56 47 V
56 50 V
56 61 V
55 61 V
56 66 V
56 77 V
56 83 V
55 86 V
56 104 V
56 115 V
55 140 V
56 174 V
56 205 V
56 288 V
55 483 V
1310 660 Box
1365 660 Box
1421 660 Box
1477 660 Box
1533 660 Box
1588 660 Box
1644 660 Box
1700 660 Box
1755 660 Box
1811 660 Box
1867 660 Box
1923 660 Box
1978 660 Box
2034 660 Box
2090 660 Box
2146 660 Box
2201 660 Box
2257 660 Box
2313 661 Box
2368 661 Box
2424 662 Box
2480 665 Box
2536 668 Box
2591 672 Box
2647 679 Box
2703 688 Box
2758 700 Box
2814 713 Box
2870 724 Box
2926 736 Box
2981 746 Box
3037 757 Box
3093 766 Box
3148 775 Box
3204 784 Box
3260 793 Box
3316 801 Box
3371 810 Box
3427 818 Box
3483 827 Box
3539 836 Box
3594 845 Box
3650 854 Box
3706 863 Box
3761 873 Box
3817 883 Box
3873 893 Box
3929 903 Box
3984 913 Box
4040 925 Box
4096 935 Box
4151 947 Box
4207 958 Box
4263 970 Box
4319 982 Box
4374 995 Box
4430 1009 Box
4486 1022 Box
4541 1036 Box
4597 1051 Box
4653 1066 Box
4709 1081 Box
4764 1098 Box
4820 1115 Box
4876 1132 Box
4932 1151 Box
4987 1169 Box
5043 1189 Box
5099 1211 Box
5154 1232 Box
5210 1255 Box
5266 1279 Box
5322 1304 Box
5377 1331 Box
5433 1358 Box
5489 1389 Box
5544 1420 Box
5600 1452 Box
5656 1488 Box
5712 1525 Box
5767 1559 Box
5823 1600 Box
5879 1640 Box
5934 1685 Box
5990 1732 Box
6046 1782 Box
6102 1843 Box
6157 1904 Box
6213 1970 Box
6269 2047 Box
6325 2130 Box
6380 2216 Box
6436 2320 Box
6492 2435 Box
6547 2575 Box
6603 2749 Box
6659 2954 Box
6715 3242 Box
6770 3725 Box
3661 3987 Box
1.000 UP
1.000 UL
LT2
LTb
3234 3767 M
gsave 0 setgray
[ [(Helvetica) 220.0 0.0 true true 0 (60 s intervals)]
] -73.3 MRshow
grestore
LT2
3366 3767 M
591 0 V
1310 660 M
55 0 V
56 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 0 V
56 0 V
55 0 V
56 0 V
56 1 V
56 0 V
55 1 V
56 1 V
56 1 V
55 3 V
56 4 V
56 6 V
56 8 V
55 10 V
56 11 V
56 11 V
55 15 V
56 16 V
56 22 V
56 21 V
55 17 V
56 14 V
56 13 V
55 15 V
56 12 V
56 12 V
56 11 V
55 10 V
56 12 V
56 10 V
56 10 V
55 10 V
56 10 V
56 10 V
55 9 V
56 9 V
56 9 V
56 9 V
55 10 V
56 9 V
56 11 V
55 10 V
56 9 V
56 10 V
56 10 V
55 11 V
56 10 V
56 10 V
55 12 V
56 12 V
56 11 V
56 12 V
55 14 V
56 13 V
56 14 V
56 15 V
55 14 V
56 14 V
56 16 V
55 16 V
56 18 V
56 17 V
56 18 V
55 18 V
56 21 V
56 22 V
55 25 V
56 24 V
56 30 V
56 26 V
55 31 V
56 30 V
56 36 V
55 35 V
56 37 V
56 45 V
56 48 V
55 55 V
56 61 V
56 68 V
56 72 V
55 82 V
56 84 V
56 99 V
55 102 V
56 133 V
56 187 V
56 275 V
55 489 V
1310 660 TriU
1365 660 TriU
1421 660 TriU
1477 660 TriU
1533 660 TriU
1588 660 TriU
1644 660 TriU
1700 660 TriU
1755 660 TriU
1811 660 TriU
1867 660 TriU
1923 660 TriU
1978 660 TriU
2034 660 TriU
2090 661 TriU
2146 661 TriU
2201 662 TriU
2257 663 TriU
2313 664 TriU
2368 667 TriU
2424 671 TriU
2480 677 TriU
2536 685 TriU
2591 695 TriU
2647 706 TriU
2703 717 TriU
2758 732 TriU
2814 748 TriU
2870 770 TriU
2926 791 TriU
2981 808 TriU
3037 822 TriU
3093 835 TriU
3148 850 TriU
3204 862 TriU
3260 874 TriU
3316 885 TriU
3371 895 TriU
3427 907 TriU
3483 917 TriU
3539 927 TriU
3594 937 TriU
3650 947 TriU
3706 957 TriU
3761 966 TriU
3817 975 TriU
3873 984 TriU
3929 993 TriU
3984 1003 TriU
4040 1012 TriU
4096 1023 TriU
4151 1033 TriU
4207 1042 TriU
4263 1052 TriU
4319 1062 TriU
4374 1073 TriU
4430 1083 TriU
4486 1093 TriU
4541 1105 TriU
4597 1117 TriU
4653 1128 TriU
4709 1140 TriU
4764 1154 TriU
4820 1167 TriU
4876 1181 TriU
4932 1196 TriU
4987 1210 TriU
5043 1224 TriU
5099 1240 TriU
5154 1256 TriU
5210 1274 TriU
5266 1291 TriU
5322 1309 TriU
5377 1327 TriU
5433 1348 TriU
5489 1370 TriU
5544 1395 TriU
5600 1419 TriU
5656 1449 TriU
5712 1475 TriU
5767 1506 TriU
5823 1536 TriU
5879 1572 TriU
5934 1607 TriU
5990 1644 TriU
6046 1689 TriU
6102 1737 TriU
6157 1792 TriU
6213 1853 TriU
6269 1921 TriU
6325 1993 TriU
6380 2075 TriU
6436 2159 TriU
6492 2258 TriU
6547 2360 TriU
6603 2493 TriU
6659 2680 TriU
6715 2955 TriU
6770 3444 TriU
3661 3767 TriU
1.000 UL
LTb
1254 660 M
5572 0 V
0 3720 V
-5572 0 V
0 -3720 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
